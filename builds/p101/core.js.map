{"version":3,"sources":["../../src/core/js/models/lockingModel.js","../../src/core/js/helpers.js","../../src/core/js/adapt.js","../../src/core/js/views/accessibilityView.js","../../src/core/js/accessibility.js","../../src/core/js/adaptCollection.js","../../src/core/js/device.js","../../src/core/js/views/drawerView.js","../../src/core/js/drawer.js","../../src/core/js/views/notifyView.js","../../src/core/js/views/notifyPushView.js","../../src/core/js/models/notifyModel.js","../../src/core/js/notify.js","../../src/core/js/offlineStorage.js","../../src/core/js/popupManager.js","../../src/core/js/models/routerModel.js","../../src/core/js/views/adaptView.js","../../src/core/js/views/blockView.js","../../src/core/js/views/articleView.js","../../src/core/js/views/pageView.js","../../src/core/js/startController.js","../../src/core/js/router.js","../../src/core/js/models/adaptModel.js","../../src/core/js/models/articleModel.js","../../src/core/js/models/blockModel.js","../../src/core/js/models/componentModel.js","../../src/core/js/models/configModel.js","../../src/core/js/models/contentObjectModel.js","../../src/core/js/models/courseModel.js","../../src/core/js/models/questionModel.js","../../src/core/js/views/buttonsView.js","../../src/core/js/views/componentView.js","../../src/core/js/views/menuView.js","../../src/core/js/views/navigationView.js","../../src/core/js/views/questionView.js","../../src/core/js/app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClplivHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrzhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjlaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnxprffile":"core.js","sourcesContent":["define('core/js/models/lockingModel',[\r\n\t'backbone'\r\n], function() {\r\n\r\n\tvar set = Backbone.Model.prototype.set;\r\n\r\n\t_.extend(Backbone.Model.prototype, {\r\n\r\n\t\tset: function(attrName, attrVal, options) {\r\n\t\t\tvar stopProcessing = !this.lockedAttributes || typeof attrName === \"object\" || typeof attrVal !== \"boolean\" || !this.isLocking(attrName);\r\n\t\t\tif (stopProcessing) return set.apply(this, arguments);\r\n\t\t\t\r\n\t\t\toptions = options || {};\r\n\r\n\t\t\tvar isSettingValueForSpecificPlugin = options && options.pluginName;\r\n\t\t\tif (!isSettingValueForSpecificPlugin) {\r\n\t\t\t\tconsole.error(\"Must supply a pluginName to change a locked attribute\");\r\n\t\t\t\toptions.pluginName = \"compatibility\";\r\n\t\t\t}\r\n\r\n\t\t\tvar pluginName  = options.pluginName;\r\n\t\t\tif (this.defaults[attrName] !== undefined) {\r\n\t\t\t\tthis.lockedAttributes[attrName] = !this.defaults[attrName];\r\n\t\t\t}\r\n\t\t\tvar lockingValue = this.lockedAttributes[attrName];\r\n\t\t\tvar isAttemptingToLock = (lockingValue === attrVal);\r\n\r\n\t\t\tif (isAttemptingToLock) {\r\n\r\n\t\t\t\tthis.setLockState(attrName, true, {pluginName:pluginName, skipcheck: true});\r\n\r\n\t\t\t\t//console.log(options.pluginName, \"locking\", attrName, \"on\", this.get(\"_id\"));\r\n\t\t\t\treturn set.call(this, attrName, lockingValue);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setLockState(attrName, false, {pluginName:pluginName, skipcheck: true});\r\n\r\n\t\t\tvar totalLockValue = this.getLockCount(attrName, {skipcheck: true})\r\n\t\t\t//console.log(options.pluginName, \"attempting to unlock\", attrName, \"on\", this.get(\"_id\"), \"lockValue\", totalLockValue, this._lockedAttributesValues[attrName]);\r\n\t\t\tif (totalLockValue === 0) {\r\n\t\t\t\t//console.log(options.pluginName, \"unlocking\", attrName, \"on\", this.get(\"_id\"));\r\n\t\t\t\treturn set.call(this, attrName, !lockingValue);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetLocking: function(attrName, defaultLockValue) {\r\n\t\t\tif (this.isLocking(attrName)) return;\r\n\t\t\tif (!this.lockedAttributes) this.lockedAttributes = {};\r\n\t\t\tthis.lockedAttributes[attrName] = defaultLockValue;\r\n\t\t},\r\n\r\n\t\tunsetLocking: function(attrName) {\r\n\t\t\tif (!this.isLocking(attrName)) return;\r\n\t\t\tif (!this.lockedAttributes) return;\r\n\t\t\tdelete this.lockedAttributes[attrName];\r\n\t\t\tdelete this._lockedAttributesValues[attrName];\r\n\t\t\tif (_.keys(this.lockedAttributes).length === 0) {\r\n\t\t\t\tdelete this.lockedAttributes;\r\n\t\t\t\tdelete this._lockedAttributesValues;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tisLocking: function(attrName) {\r\n\t\t\tvar isCheckingGeneralLockingState = (attrName === undefined);\r\n\t\t\tvar isUsingLockedAttributes = (this.lockedAttributes !== undefined);\r\n\r\n\t\t\tif (isCheckingGeneralLockingState) {\r\n\t\t\t\treturn isUsingLockedAttributes;\r\n\t\t\t}\r\n\r\n\t\t\tif (!isUsingLockedAttributes) return false;\r\n\r\n\t\t\tvar isAttributeALockingAttribute = this.lockedAttributes[attrName] !== undefined;\r\n\t\t\tif (!isAttributeALockingAttribute) return false;\r\n\r\n\t\t\tif (this._lockedAttributesValues === undefined) {\r\n\t\t\t\tthis._lockedAttributesValues = {};\r\n\t\t\t}\r\n\r\n\t\t\tif (this._lockedAttributesValues[attrName] === undefined) {\r\n\t\t\t\tthis._lockedAttributesValues[attrName] = {};\t\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tisLocked: function(attrName, options) {\r\n\t\t\tvar shouldSkipCheck = (options && options.skipcheck);\r\n\t\t\tif (!shouldSkipCheck) { \r\n\t\t\t\tvar stopProcessing =  !this.isLocking(attrName);\r\n\t\t\t\tif (stopProcessing) return;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.getLockCount(attrName) > 0;\r\n\t\t},\r\n\r\n\t\tgetLockCount: function(attrName, options) {\r\n\t\t\tvar shouldSkipCheck = (options && options.skipcheck);\r\n\t\t\tif (!shouldSkipCheck) { \r\n\t\t\t\tvar stopProcessing =  !this.isLocking(attrName);\r\n\t\t\t\tif (stopProcessing) return;\r\n\t\t\t}\r\n\r\n\t\t\tvar isGettingValueForSpecificPlugin = options && options.pluginName;\r\n\t\t\tif (isGettingValueForSpecificPlugin) {\r\n\r\n\t\t\t\treturn this._lockedAttributesValues[attrName][options.pluginName] ? 1 : 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar lockingAttributeValues = _.values(this._lockedAttributesValues[attrName]);\r\n\t\t\tvar lockingAttributeValuesSum = _.reduce(lockingAttributeValues, function(sum, value){ return sum + (value ? 1 : 0); }, 0);\r\n\t\t\t\r\n\t\t\treturn lockingAttributeValuesSum;\r\n\t\t},\r\n\r\n\t\tsetLockState: function(attrName, value, options) {\r\n\t\t\tvar shouldSkipCheck = (options && options.skipcheck);\r\n\t\t\tif (!shouldSkipCheck) { \r\n\t\t\t\tvar stopProcessing =  !this.isLocking(attrName);\r\n\t\t\t\tif (stopProcessing) return this;\r\n\t\t\t}\r\n\r\n\t\t\tvar isSettingValueForSpecificPlugin = options && options.pluginName;\r\n\t\t\tif (!isSettingValueForSpecificPlugin) {\r\n\t\t\t\tconsole.error(\"Must supply a pluginName to set a locked attribute lock value\");\r\n\t\t\t\toptions.pluginName = \"compatibility\";\r\n\t\t\t}\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\tthis._lockedAttributesValues[attrName][options.pluginName] = value;\r\n\t\t\t} else {\r\n\t\t\t\tdelete this._lockedAttributesValues[attrName][options.pluginName];\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});\r\n\n","define('core/js/helpers',[\r\n    'handlebars'\r\n], function(Handlebars){\r\n\r\n    var helpers = {\r\n\r\n        lowercase: function(text) {\r\n            return text.toLowerCase();\r\n        },\r\n        \r\n        capitalise:  function(text) {\r\n            return text.charAt(0).toUpperCase() + text.slice(1);\r\n        },\r\n\r\n        inc: function(index) {\r\n            return index+1;\r\n        },\r\n\r\n        dec: function(index) {\r\n            return index-1;\r\n        },\r\n\r\n        odd: function (index) {\r\n            return (index +1) % 2 === 0  ? 'even' : 'odd';\r\n        },\r\n\r\n        equals: function(value, text, block) {\r\n            return helpers.compare.call(this, value, \"==\", text, block);\r\n        },\r\n\r\n        compare: function(value, operator, text, block) {\r\n            // Comparison operators\r\n            switch (operator) {\r\n            case \"===\":\r\n                if (value === text) return block.fn(this);\r\n                break;\r\n            case \"=\": case \"==\":\r\n                if (value == text) return block.fn(this);\r\n                break;\r\n            case \">=\":\r\n                if (value >= text) return block.fn(this);\r\n                break;\r\n            case \"<=\":\r\n                if (value <= text) return block.fn(this);\r\n                break;\r\n            case \">\":\r\n                if (value > text) return block.fn(this);\r\n                break;\r\n            case \"<\":\r\n                if (value < text) return block.fn(this);\r\n                break;\r\n            }\r\n            return block.inverse(this);\r\n        },\r\n\r\n        math: function(lvalue, operator, rvalue, options) {\r\n            // Mathematical operators\r\n            lvalue = parseFloat(lvalue);\r\n            rvalue = parseFloat(rvalue);\r\n            switch (operator) {\r\n            case \"+\": return lvalue + rvalue;\r\n            case \"-\": return lvalue - rvalue;\r\n            case \"*\": return lvalue * rvalue;\r\n            case \"/\": return lvalue / rvalue;\r\n            case \"%\": return lvalue % rvalue;\r\n            }\r\n        },\r\n\r\n        compile: function(template) {\r\n            // Allow JSON to be a template\r\n            return Handlebars.compile(template)(this);\r\n        },\r\n\r\n        compile_a11y_text: function(template) {\r\n            // Allow JSON to be a template and accessible text\r\n            return Handlebars.helpers.a11y_text.call(this, helpers.compile.call(this, template));\r\n        },\r\n\r\n        compile_a11y_normalize: function(template) {\r\n            // Allow JSON to be a template and normalized text\r\n            return Handlebars.helpers.a11y_normalize.call(this, helpers.compile.call(this, template));\r\n        }\r\n\r\n    };\r\n\r\n    // Compatibility references\r\n    helpers['if_value_equals'] = helpers['equals'];\r\n    helpers['numbers'] = helpers['inc'];\r\n    helpers['lowerCase'] = helpers['lowercase'];\r\n\r\n    for (var name in helpers) {\r\n        if (helpers.hasOwnProperty(name)) {\r\n             Handlebars.registerHelper(name, helpers[name]);\r\n        }\r\n    }\r\n\r\n    return helpers;\r\n\r\n});\r\n\n","define('core/js/adapt',[\r\n    'coreModels/lockingModel',\r\n    'coreHelpers'\r\n], function(lockingModel, Helpers) {\r\n\r\n    var AdaptModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            _canScroll: true, //to stop scrollTo behaviour,\r\n            _outstandingCompletionChecks: 0\r\n        },\r\n\r\n        lockedAttributes: {\r\n            _canScroll: false\r\n        },\r\n\r\n        //call when entering an asynchronous completion check\r\n        checkingCompletion: function() {\r\n            var outstandingChecks = this.get(\"_outstandingCompletionChecks\");\r\n            this.set(\"_outstandingCompletionChecks\", ++outstandingChecks);\r\n        },\r\n\r\n        //call when exiting an asynchronous completion check\r\n        checkedCompletion: function() {\r\n            var outstandingChecks = this.get(\"_outstandingCompletionChecks\");\r\n            this.set(\"_outstandingCompletionChecks\", --outstandingChecks);\r\n        },\r\n\r\n        //wait until there are no outstanding completion checks\r\n        deferUntilCompletionChecked: function(callback) {\r\n\r\n            if (this.get(\"_outstandingCompletionChecks\") === 0) return callback();\r\n\r\n            var checkIfAnyChecksOutstanding = function(model, outstandingChecks) {\r\n                if (outstandingChecks !== 0) return;\r\n\r\n                Adapt.off(\"change:_outstandingCompletionChecks\", checkIfAnyChecksOutstanding);\r\n\r\n                callback();\r\n            };\r\n\r\n            Adapt.on(\"change:_outstandingCompletionChecks\", checkIfAnyChecksOutstanding);\r\n\r\n        }\r\n\r\n    });\r\n\r\n    var Adapt = new AdaptModel();\r\n\r\n    Adapt.location = {};\r\n    Adapt.componentStore = {};\r\n    var mappedIds = {};\r\n\r\n    Adapt.initialize = _.once(function() {\r\n\r\n        //wait until no more completion checking \r\n        Adapt.deferUntilCompletionChecked(function() {\r\n\r\n            //start adapt in a full restored state\r\n            Adapt.trigger('adapt:start');\r\n            Backbone.history.start();\r\n            Adapt.trigger('adapt:initialize');\r\n\r\n        });\r\n\r\n    });\r\n\r\n    Adapt.scrollTo = function(selector, settings) {\r\n        // Get the current location - this is set in the router\r\n        var location = (Adapt.location._contentType) ?\r\n            Adapt.location._contentType : Adapt.location._currentLocation;\r\n        // Trigger initial scrollTo event\r\n        Adapt.trigger(location+':scrollTo', selector);\r\n        //Setup duration variable passed upon arguments\r\n        var settings = (settings || {});\r\n        var disableScrollToAnimation = Adapt.config.has('_disableAnimation') ? Adapt.config.get('_disableAnimation') : false;\r\n        if (disableScrollToAnimation) {\r\n            settings.duration = 0;\r\n        }\r\n        else if (!settings.duration) {\r\n            settings.duration = $.scrollTo.defaults.duration;\r\n        }\r\n\r\n        var navigationHeight = $(\".navigation\").outerHeight();\r\n\r\n        if (!settings.offset) settings.offset = { top: -navigationHeight, left: 0 };\r\n        if (settings.offset.top === undefined) settings.offset.top = -navigationHeight;\r\n        if (settings.offset.left === undefined) settings.offset.left = 0;\r\n\r\n        if (settings.offset.left === 0) settings.axis = \"y\";\r\n\r\n        if (Adapt.get(\"_canScroll\") !== false) {\r\n        // Trigger scrollTo plugin\r\n        $.scrollTo(selector, settings);\r\n        }\r\n\r\n        // Trigger an event after animation\r\n        // 300 milliseconds added to make sure queue has finished\r\n        _.delay(function() {\r\n            $(selector).a11y_focus();\r\n            Adapt.trigger(location+':scrolledTo', selector);\r\n        }, settings.duration+300);\r\n\r\n    }\r\n\r\n    Adapt.navigateToElement = function(selector, settings) {\r\n        // Allows a selector to be passed in and Adapt will navigate to this element\r\n\r\n        // Setup settings object\r\n        var settings = (settings || {});\r\n\r\n        // Removes . symbol from the selector to find the model\r\n        var currentModelId = selector.replace(/\\./g, '');\r\n        var currentModel = Adapt.findById(currentModelId);\r\n        // Get current page to check whether this is the current page\r\n        var currentPage = (currentModel._siblings === 'contentObjects') ? currentModel : currentModel.findAncestor('contentObjects');\r\n\r\n        // If current page - scrollTo element\r\n        if (currentPage.get('_id') === Adapt.location._currentId) {\r\n           return Adapt.scrollTo(selector, settings);\r\n        }\r\n\r\n        // If the element is on another page navigate and wait until pageView:ready is fired\r\n        // Then scrollTo element\r\n        Adapt.once('pageView:ready', function() {\r\n            _.defer(function() {\r\n                Adapt.scrollTo(selector, settings)\r\n            })\r\n        });\r\n\r\n        var shouldReplaceRoute = settings.replace || false;\r\n\r\n        Backbone.history.navigate('#/id/' + currentPage.get('_id'), {trigger: true, replace: shouldReplaceRoute});\r\n    }\r\n\r\n    Adapt.register = function(name, object) {\r\n        // Used to register components\r\n        // Store the component view\r\n        if (Adapt.componentStore[name])\r\n            throw Error('This component already exists in your project');\r\n\r\n        if (object.view) {\r\n            //use view+model object\r\n            if(!object.view.template) object.view.template = name;\r\n        } else {\r\n            //use view object\r\n            if(!object.template) object.template = name;\r\n        }\r\n        \r\n        Adapt.componentStore[name] = object;\r\n\r\n        return object;\r\n    }\r\n\r\n    // Used to map ids to collections\r\n    Adapt.setupMapping = function() {\r\n\r\n        // Setup course Id\r\n        mappedIds[Adapt.course.get('_id')] = \"course\";\r\n\r\n        // Setup each collection\r\n        var collections = [\"contentObjects\", \"articles\", \"blocks\", \"components\"];\r\n\r\n        for (var i = 0, len = collections.length; i < len; i++) {\r\n            var collection = collections[i];\r\n            var models = Adapt[collection].models;\r\n            for (var j = 0, lenj = models.length; j < lenj; j++) {\r\n                var model = models[j];\r\n                mappedIds[model.get('_id')] = collection;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    Adapt.resetMapping = function () {\r\n        mappedIds = {};\r\n    }\r\n\r\n    Adapt.mapById = function(id) {\r\n        // Returns collection name that contains this models Id\r\n        return mappedIds[id];\r\n    }\r\n\r\n    Adapt.findById = function(id) {\r\n\r\n        // Return a model\r\n        // Checks if the Id passed in is the course Id\r\n        if (id === Adapt.course.get('_id')) {\r\n            return Adapt.course;\r\n        }\r\n\r\n        var collectionType = Adapt.mapById(id);\r\n\r\n        if (!collectionType) {\r\n            console.warn('Adapt.findById() unable to find collection type for id: ' + id);\r\n            return;\r\n        }\r\n\r\n        return Adapt[collectionType]._byAdaptID[id][0];\r\n\r\n    }\r\n\r\n    return Adapt;\r\n\r\n});\r\n\n","define('core/js/views/accessibilityView',['require','backbone','coreJS/adapt'],function(require) {\r\n\r\n    var Backbone = require('backbone');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var AccessibilityView = Backbone.View.extend({\r\n\r\n        el: '#accessibility-toggle',\r\n\r\n        initialize: function() {\r\n            this.render();\r\n        },\r\n\r\n        events: {\r\n            'click' : 'toggleAccessibility'\r\n        },\r\n\r\n        render: function() {\r\n            var hasAccessibility = Adapt.config.has('_accessibility')\r\n                && Adapt.config.get('_accessibility')._isEnabled;\r\n\r\n            if (!hasAccessibility) {\r\n                return;\r\n            } else {\r\n                var isActive = Adapt.config.get('_accessibility')._isActive;\r\n                var offLabel = Adapt.course.get('_globals') && (Adapt.course.get('_globals')._accessibility.accessibilityToggleTextOff || Adapt.course.get('_globals')._accessibility._accessibilityToggleTextOff);\r\n                var onLabel = Adapt.course.get('_globals') && (Adapt.course.get('_globals')._accessibility.accessibilityToggleTextOn || Adapt.course.get('_globals')._accessibility._accessibilityToggleTextOn);\r\n\r\n                var toggleText = isActive ? offLabel : onLabel;\r\n\r\n                this.$el.html(toggleText).attr('aria-label', Adapt.course.get(\"title\") + \". \"\r\n                    + Adapt.course.get('_globals')._accessibility._ariaLabels.accessibilityToggleButton + \". \"\r\n                    + $.a11y_normalize(toggleText));\r\n            }\r\n        },\r\n\r\n        toggleAccessibility: function(event) {\r\n            event.preventDefault();\r\n\r\n            var hasAccessibility = Adapt.config.get('_accessibility')._isActive;\r\n\r\n            var toggleAccessibility = (hasAccessibility) ? false : true;\r\n\r\n            Adapt.config.get('_accessibility')._isActive = toggleAccessibility;\r\n\r\n            Adapt.trigger('accessibility:toggle');\r\n\r\n            this.render();\r\n            \r\n            Backbone.history.navigate(window.location.hash || \"#/\", {trigger: true});\r\n        }\r\n\r\n    });\r\n\r\n    return AccessibilityView;\r\n\r\n});\r\n\n","define('core/js/accessibility',['require','coreJS/adapt','a11y','coreViews/accessibilityView'],function(require) {\r\n\r\n    var Adapt = require('coreJS/adapt');\r\n    var a11y = require('a11y');\r\n    var AccessibilityView = require('coreViews/accessibilityView');\r\n\r\n    var Accessibility = _.extend({\r\n        $html: $('html'),\r\n        $accessibilityInstructions: $(\"#accessibility-instructions\"),\r\n        $accessibilityToggle: $(\"#accessibility-toggle\"),\r\n\r\n        _tabIndexElements: 'a, button, input, select, textarea, [tabindex]',\r\n        _isButtonRedirectionOn: true,\r\n        _hasUserTabbed: false,\r\n        _hasUsageInstructionRead: false,\r\n        _isLoaded: false,\r\n        _hasCourseLoaded: false,\r\n        _legacyFocusElements: undefined,\r\n\r\n        reset: function() {\r\n            _.extend(this, {\r\n                _isButtonRedirectionOn: true,\r\n                _hasUserTabbed: false,\r\n                _hasUsageInstructionRead: false\r\n            });\r\n        },\r\n\r\n        initialize: function() {\r\n            //RUN ONCE\r\n            if (this._isLoaded) return;\r\n\r\n            //TRIGGER SETUP ON DATA LOADED AND TOGGLE BUTTON\r\n            Adapt.once('app:dataLoaded', function() {\r\n                //check if accessibility mode should be restored\r\n                this._hasCourseLoaded = true;\r\n                Adapt.config.get(\"_accessibility\")._isActive = Adapt.offlineStorage.get(\"a11y\") || false;\r\n                this.setupAccessibility();\r\n                \r\n            }, Accessibility);\r\n\r\n            Adapt.on('accessibility:toggle', this.setupAccessibility, Accessibility);\r\n\r\n            //SETUP RENDERING HELPERS\r\n            Adapt.once('app:dataLoaded', this.setupHelpers, Accessibility);\r\n            Adapt.once('app:dataLoaded', this.touchDeviceCheck, Accessibility);\r\n\r\n            //SETUP NEW VIEW FOR TOGGLE BUTTON\r\n            Adapt.once('app:dataReady', this.setupToggleButton, this);\r\n\r\n            //SETUP NO SELECT PARAMETERS ON DEVICE CHANGE\r\n            Adapt.on(\"device:changed\", this.setupNoSelect);\r\n\r\n            //Configure the accessibility library\r\n            this.listenToOnce(Adapt, \"app:dataReady\", this.configureA11yLibrary)\r\n\r\n            //CAPTURE ROUTING/NEW DOCUMENT LOADING START AND END\r\n            this.listenTo(Adapt, 'router:location', this.onNavigationStart);\r\n            this.listenTo(Adapt, 'pageView:ready menuView:ready router:plugin', this.onNavigationEnd);\r\n        },\r\n\r\n        setupAccessibility: function() {\r\n            //CALLED ON BUTTON CLICK AND ON DATA LOAD\r\n            if (!this.isEnabled()) return;\r\n\r\n            if (this._hasCourseLoaded && !Modernizr.touch) {\r\n                //save accessibility state\r\n                Adapt.offlineStorage.set(\"a11y\", Adapt.config.get(\"_accessibility\")._isActive);\r\n            }\r\n\r\n            this.reset();\r\n\r\n            this.checkTabCapture();\r\n\r\n            this.configureA11yLibrary();\r\n\t\t\t\r\n            this.touchDeviceCheck();\r\n\t\t\t\r\n            // Check if accessibility is active\r\n            if (this.isActive()) {\r\n\r\n                this.setupDocument();\r\n                this.setupLegacy();\r\n                this.setupPopupListeners()\r\n                this.setupUsageInstructions();\r\n                this.setupLogging();\r\n\r\n            } else {\r\n\r\n                this.revertDocument();\r\n                this.revertLegacy();\r\n                this.revertPopupListeners();\r\n                this.revertUsageInstructions();\r\n                this.revertLogging();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        setupHelpers: function() {\r\n\r\n            //MAKE $.a11y_text and $.a11y_normalize IN GLOBAL HANDLEBARS HELPERS a11y_text and a11y_normalize\r\n            var config = Adapt.config.has('_accessibility')\r\n                ? Adapt.config.get(\"_accessibility\")\r\n                : false;\r\n\r\n            Handlebars.registerHelper('a11y_text', function(text) {\r\n                //ALLOW ENABLE/DISABLE OF a11y_text HELPER\r\n                if (config && config._isTextProcessorEnabled === false) {\r\n                    return text;\r\n                } else {\r\n                    return $.a11y_text(text);\r\n                }\r\n            });\r\n\r\n            Handlebars.registerHelper('a11y_normalize', function(text) {\r\n                return $.a11y_normalize(text);\r\n            });\r\n\r\n            Handlebars.registerHelper('a11y_aria_label', function(text) {\r\n                return '<div class=\"aria-label prevent-default\" tabindex=\"0\" role=\"region\">'+text+'</div>';\r\n            });\r\n\r\n            Handlebars.registerHelper('a11y_aria_label_relative', function(text) {\r\n                return '<div class=\"aria-label relative prevent-default\" tabindex=\"0\" role=\"region\">'+text+'</div>';\r\n            });\r\n\r\n            Handlebars.registerHelper('a11y_wrap_focus', function(text) {\r\n                return '<a id=\"a11y-focusguard\" class=\"a11y-ignore a11y-ignore-focus\" tabindex=\"0\" role=\"button\">&nbsp;</a>';\r\n            });\r\n\r\n            Handlebars.registerHelper('a11y_attrs_heading', function(level) {\r\n                return ' role=\"heading\" aria-level=\"'+level+'\" tabindex=\"0\" ';\r\n            });\r\n\r\n            Handlebars.registerHelper('a11y_attrs_tabbable', function() {\r\n                return ' role=\"region\" tabindex=\"0\" ';\r\n            });\r\n\r\n        },\r\n\r\n        setupToggleButton: function() {\r\n            if (this.isEnabled()) {\r\n                new AccessibilityView();\r\n            } else {\r\n                this.$accessibilityToggle.addClass(\"a11y-ignore\").a11y_cntrl_enabled(false);\r\n            }\r\n        },\r\n\r\n        setupNoSelect: function() {\r\n            if (!Adapt.config.get('_accessibility') || !Adapt.config.get('_accessibility')._disableTextSelectOnClasses) return;\r\n\r\n            var classes = Adapt.config.get('_accessibility')._disableTextSelectOnClasses.split(\" \");\r\n\r\n            var isMatch = false;\r\n            for (var i = 0, item; item = classes[i++];) {\r\n                if ($('html').is(item)) {\r\n                    isMatch = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isMatch) {\r\n                $('html').addClass(\"no-select\");\r\n            } else  {\r\n                $('html').removeClass(\"no-select\");\r\n            }\r\n\r\n        },\r\n\r\n        configureA11yLibrary: function() {\r\n\r\n            var topOffset = $('.navigation').height();\r\n            var bottomoffset = 0;\r\n            $.a11y.options.focusOffsetTop = topOffset;\r\n            $.a11y.options.focusOffsetBottom = bottomoffset;\r\n            $.a11y.options.OS = Adapt.device.OS.toLowerCase();\r\n            $.a11y.options.isTouchDevice = Modernizr.touch;\r\n\r\n            if (this.isActive()) {\r\n                _.extend($.a11y.options, {\r\n                    isTabbableTextEnabled: true,\r\n                    isUserInputControlEnabled: true,\r\n                    isFocusControlEnabled: true,\r\n                    isFocusLimited: true,\r\n                    isRemoveNotAccessiblesEnabled: true,\r\n                    isAriaLabelFixEnabled: true,\r\n                    isFocusWrapEnabled: true,\r\n                    isScrollDisableEnabled: true,\r\n                    isScrollDisabledOnPopupEnabled: false,\r\n                    isSelectedAlertsEnabled: true,\r\n                    isAlertsEnabled: true\r\n                });\r\n            } else {\r\n                _.extend($.a11y.options, {\r\n                    isTabbableTextEnabled: false,\r\n                    isUserInputControlEnabled: true,\r\n                    isFocusControlEnabled: true,\r\n                    isFocusLimited: false,\r\n                    isRemoveNotAccessiblesEnabled: true,\r\n                    isAriaLabelFixEnabled: true,\r\n                    isFocusWrapEnabled: true,\r\n                    isScrollDisableEnabled: true,\r\n                    isScrollDisabledOnPopupEnabled: false,\r\n                    isSelectedAlertsEnabled: false,\r\n                    isAlertsEnabled: false\r\n                });\r\n            }\r\n\r\n            this.setupNoSelect();\r\n\r\n            $.a11y.ready();\r\n\r\n            if (!this.isEnabled()) return;\r\n\r\n            //CAPTURE TAB PRESSES TO DIVERT\r\n            $('body').off('keyup', this.onKeyUp);\r\n            $('body').on('keyup', this.onKeyUp);\r\n        },\r\n\r\n        onNavigationStart: function() {\r\n            this._isLoaded = false;\r\n            this._hasUserTabbed = false;\r\n            //STOP DOCUMENT READING, MOVE FOCUS TO APPROPRIATE LOCATION\r\n            $(\"#a11y-focuser\").a11y_focus(true);\r\n            _.defer(function() {\r\n                $.a11y_on(false, '.page');\r\n                $.a11y_on(false, '.menu');\r\n            });\r\n        },\r\n\r\n        onNavigationEnd: function(view) {\r\n            //prevent sub-menu items provoking behaviour\r\n            if (view && view.model) {\r\n                if (view.model.get(\"_id\") != Adapt.location._currentId) return;\r\n            }\r\n\r\n            //always use detached aria labels for divs and spans\r\n            _.defer(function() {\r\n                $('body').a11y_aria_label(true);\r\n            });\r\n\r\n            this._isLoaded = true;\r\n\r\n            $.a11y_on(false, '.page');\r\n            $.a11y_on(false, '.menu');\r\n\r\n            this.configureA11yLibrary();\r\n            $.a11y_update();\r\n            this.setNavigationBar();\r\n\r\n            //MAKE FOCUS RIGHT\r\n            this._isButtonRedirectionOn = true;\r\n            _.delay(_.bind(function() {\r\n                this.focusInitial();\r\n            }, this), 500);\r\n\r\n        },\r\n\r\n        setNavigationBar: function() {\r\n            if (this.isActive()) {\r\n                $(\".navigation .aria-label\").attr(\"tabindex\", 0).removeAttr(\"aria-hidden\").removeClass(\"a11y-ignore\");\r\n            } else {\r\n                $(\".navigation .aria-label\").attr(\"tabindex\", -1).attr(\"aria-hidden\", \"true\");\r\n            }\r\n        },\r\n\r\n        touchDeviceCheck: function() {\r\n            //SCREEN READER DON@T USE TABBING\r\n            //FORCE ACCESSIBILITY ON TO RENDER NECESSARY STUFFS FOR TOUCH DEVICE SCREENREADERS\r\n            if (!this.isEnabled()) return;\r\n\r\n            if (Modernizr.touch) {\r\n                 //Remove button\r\n                this.$accessibilityToggle.remove();\r\n            }\r\n\r\n            if (!Modernizr.touch || this.isActive()) return;\r\n\r\n            //If a touch device and not enabled, remove accessibility button and turn on accessibility\r\n\r\n            this._isLoaded = true;\r\n\r\n            //Force accessibility on\r\n            Adapt.config.get('_accessibility')._isEnabled = true;\r\n            Adapt.config.get('_accessibility')._isActive = true;\r\n\r\n            Adapt.trigger('accessibility:toggle', true);\r\n\r\n        },\r\n\r\n        checkTabCapture: function() {\r\n            if (!this._isLoaded) return;\r\n\r\n            var isActive = this.isActive();\r\n\r\n            $.a11y(isActive);\r\n\r\n            //IF ACCESSIBILTY TURNED ON QUIT\r\n            if (isActive) return;\r\n\r\n            //OTHERWISE ENABLE TAB REDIRECTION TO TOGGLE BUTTON\r\n            this._isButtonRedirectionOn = true;\r\n        },\r\n\r\n        isActive: function() {\r\n            return Adapt.config.has('_accessibility')\r\n                && Adapt.config.get('_accessibility')._isEnabled\r\n                && Adapt.config.get('_accessibility')._isActive;\r\n        },\r\n\r\n        isEnabled: function() {\r\n            return Adapt.config.has('_accessibility')\r\n                && Adapt.config.get('_accessibility')._isEnabled\r\n        },\r\n\r\n        setupDocument: function() {\r\n            this.$html.addClass('accessibility');\r\n            $.a11y(true)\r\n            $.a11y_on(true, \"body > *\");\r\n        },\r\n\r\n        setupLegacy: function() {\r\n            //IE8 .focused CLASS AS :focus ISN'T AVAILABLE\r\n\r\n            if(!this.$html.hasClass('ie8') || !Adapt.config.get('_accessibility')._shouldSupportLegacyBrowsers) return;\r\n\r\n            // If legacy enabled run setupLegacyListeners()\r\n            this.listenTo(Adapt, 'pageView:ready menuView:ready', this.setupLegacyFocusClasser);\r\n            this.listenTo(Adapt, 'remove', this.removeLegacyFocusClasser);\r\n\r\n        },\r\n\r\n        setupLegacyFocusClasser: function() {\r\n            this.removeLegacyFocusClasser();\r\n\r\n            // On focus add class of focused, on blur remove class\r\n            this._legacyFocusElements = $(this._tabIndexElements);\r\n            this._legacyFocusElements\r\n                .on('focus', this.onElementFocused)\r\n                .on('blur', this.onElementBlurred);\r\n        },\r\n\r\n        setupPopupListeners: function() {\r\n            this.listenTo(Adapt, 'popup:opened popup:closed', this.onPop);\r\n        },\r\n\r\n\r\n        setupUsageInstructions: function() {\r\n            if (!Adapt.course.get(\"_globals\")._accessibility || !Adapt.course.get(\"_globals\")._accessibility._accessibilityInstructions) {\r\n                this.$accessibilityInstructions.remove();\r\n                return;\r\n            }\r\n\r\n            var instructionsList = Adapt.course.get(\"_globals\")._accessibility._accessibilityInstructions;\r\n\r\n            var usageInstructions;\r\n            if (instructionsList[Adapt.device.browser]) {\r\n                usageInstructions = instructionsList[Adapt.device.browser];\r\n            } else if (Modernizr.touch) {\r\n                usageInstructions = instructionsList.touch || \"\";\r\n            } else {\r\n                usageInstructions = instructionsList.notouch || \"\";\r\n            }\r\n\r\n           this.$accessibilityInstructions.html( usageInstructions );\r\n        },\r\n\r\n        setupLogging: function() {\r\n            if (!Adapt.config.get(\"_accessibility\") || !Adapt.config.get(\"_accessibility\")._logReading) return;\r\n\r\n            $(document).on(\"reading\", this.onRead);\r\n        },\r\n\r\n\r\n\r\n        revertDocument: function() {\r\n            this.$html.removeClass('accessibility');\r\n            $.a11y(false)\r\n            $.a11y_on(false, \"body > *\");\r\n            $.a11y_on(true, \"#accessibility-toggle\");\r\n        },\r\n\r\n        revertLegacy: function() {\r\n\r\n            if(!this.$html.hasClass('ie8') || !Adapt.config.get('_accessibility')._shouldSupportLegacyBrowsers) return;\r\n\r\n            this.stopListening(Adapt, 'pageView:ready menuView:ready', this.setupLegacyFocusClasser);\r\n            this.stopListening(Adapt, 'remove', this.removeLegacyFocusClasser);\r\n\r\n        },\r\n\r\n        removeLegacyFocusClasser: function() {\r\n            if (this._legacyFocusElements === undefined) return;\r\n\r\n            //Remove focus and blur events\r\n            this._legacyFocusElements\r\n                .off('focus', this.onElementFocused)\r\n                .off('blur', this.onElementBlurred);\r\n            this._legacyFocusElements = undefined;\r\n        },\r\n\r\n\r\n        revertPopupListeners: function() {\r\n            this.stopListening(Adapt, 'popup:opened popup:closed', this.onPop);\r\n        },\r\n\r\n        revertUsageInstructions: function() {\r\n            if (Adapt.course.has(\"_globals\") && (!Adapt.course.get(\"_globals\")._accessibility || !Adapt.course.get(\"_globals\")._accessibility._accessibilityInstructions)) return;\r\n\r\n            this.$accessibilityInstructions\r\n                .off(\"blur\", this.onFocusInstructions)\r\n        },\r\n\r\n        revertLogging: function() {\r\n            if (Adapt.course.has(\"_globals\") && (!Adapt.course.get(\"_globals\")._accessibility || !Adapt.course.get(\"_globals\")._accessibility._logReading)) return;\r\n\r\n            $($.a11y).off(\"reading\", this.onRead);\r\n        },\r\n\r\n\r\n        focusInitial: function() {\r\n            if (!this.isActive()) return;\r\n\r\n            this._isButtonRedirectionOn = false;\r\n\r\n            var debouncedInitial = _.debounce(_.bind(function() {\r\n                //ENABLED DOCUMENT READING\r\n\r\n                if (!this._hasUsageInstructionRead) {\r\n\r\n                    this._hasUsageInstructionRead = true;\r\n\r\n                    $.a11y_on(true, '.page');\r\n                    $.a11y_on(true, '.menu');\r\n\r\n                    if (this._hasUserTabbed) return;\r\n\t\r\n                    this.$accessibilityInstructions.one(\"blur\", this.onFocusInstructions)\r\n\t\r\n                    _.delay(function(){\r\n                        Accessibility.$accessibilityInstructions.focusNoScroll();\r\n                    }, 250);\r\n\r\n                } else {\r\n\r\n                    if (Adapt.location._currentId && $.a11y.options.OS!=\"mac\") {\r\n                        //required to stop JAWS from auto reading content in IE\r\n                        var currentModel = Adapt.findById(Adapt.location._currentId);\r\n                        var alertText = \" \";\r\n\r\n                        switch (currentModel.get(\"_type\")) {\r\n                            case \"page\":\r\n                            if (Adapt.course.get(\"_globals\") && Adapt.course.get(\"_globals\")._accessibility && Adapt.course.get(\"_globals\")._accessibility._ariaLabels && Adapt.course.get(\"_globals\")._accessibility._ariaLabels.pageLoaded) {\r\n                                    alertText = Adapt.course.get(\"_globals\")._accessibility._ariaLabels.pageLoaded;\r\n                                }\r\n                                break;\r\n\r\n                            case \"menu\":\r\n                            default:\r\n                            if (Adapt.course.get(\"_globals\") && Adapt.course.get(\"_globals\")._accessibility && Adapt.course.get(\"_globals\")._accessibility._ariaLabels && Adapt.course.get(\"_globals\")._accessibility._ariaLabels.menuLoaded) {\r\n                                    alertText = Adapt.course.get(\"_globals\")._accessibility._ariaLabels.menuLoaded;\r\n                                }\r\n                                break;\r\n                        }\r\n\r\n                        $.a11y_alert(alertText);\r\n                    }\r\n\r\n                     _.delay(_.bind(function() {\r\n                        var windowScrollTop = $(window).scrollTop();\r\n                        var documentScrollTop = $(document).scrollTop();\r\n\r\n                        $.a11y_on(true, '.page');\r\n                        $.a11y_on(true, '.menu');\r\n\r\n                        //prevent auto scrolling to top when scroll has been initiated\r\n                        if (windowScrollTop > 0 || documentScrollTop > 0 || this._hasUserTabbed) return;\r\n\r\n                        _.delay(function(){\r\n                        $.a11y_focus();\r\n                        }, 500);\r\n\r\n                    }, this), 500);\r\n\r\n                }\r\n\r\n            }, this), 100);\r\n            debouncedInitial();\r\n\r\n        },\r\n\r\n        onElementFocused: function(event) {\r\n             $(this).addClass('focused');\r\n        },\r\n\r\n        onElementBlurred: function(event) {\r\n            $(this).removeClass('focused');\r\n        },\r\n\r\n        onRead: function(event, text) {\r\n            //OUTPUT READ TEXT TO CONSOLE\r\n            console.log(\"READING: \" + text);\r\n        },\r\n\r\n        onPop: function() {\r\n            //MAKE SURE POPUP IS CONFIGURED CORRECTLY WITH ARIA LABELS, TABINDEXES ETC\r\n            if (this.isActive()) {\r\n                $.a11y_update();\r\n            }\r\n        },\r\n\r\n        onKeyUp: function(event) {\r\n\r\n            //IF NOT TAB KEY, RETURN\r\n            if (event.which !== 9) return;\r\n\r\n            //DO NOT REDIRECT IF USER HAS ALREADY INTERACTED\r\n            if ($.a11y.userInteracted) return;\r\n            Accessibility._hasUserTabbed = true;\r\n\r\n            //IF INITIAL TAB NOT CAPTURED AND ACCESSIBILITY NOT ON, RETURN\r\n            if (Accessibility.isActive() && !Accessibility._isButtonRedirectionOn) return;\r\n\r\n            //IF TAB PRESSED, AND TAB REDIRECTION ON, ALWAYS TAB TO ACCESSIBILITY BUTTON ONLY\r\n            Accessibility.$accessibilityToggle.focus();\r\n\r\n        },\r\n\r\n        onFocusInstructions: function(event) {\r\n            //HIDE INSTRUCTIONS FROM TAB WRAP AROUND AFTER LEAVING INSTRUCTIONS\r\n            if (Accessibility._isButtonRedirectionOn) return;\r\n            if (!Accessibility._isLoaded) return;\r\n            Accessibility.$accessibilityInstructions\r\n                .addClass(\"a11y-ignore-focus\")\r\n                .off(\"blur\", Accessibility.onFocusInstructions);\r\n        }\r\n\r\n    }, Backbone.Events);\r\n\r\n\r\n    Accessibility.initialize();\r\n\r\n    return Accessibility;\r\n\r\n});\r\n\n","define('core/js/adaptCollection',['require','backbone','coreJS/adapt'],function(require) {\r\n\r\n    var Backbone = require('backbone');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var AdaptCollection = Backbone.Collection.extend({\r\n        initialize : function(models, options){\r\n            this.url = options.url;\r\n\r\n            this.once('reset', this.loadedData, this);\r\n            if (this.url) {\r\n                this.fetch({\r\n                    reset:true,\r\n                    error: _.bind(function(model, xhr, options) {\r\n                        console.error(\"ERROR: unable to load file \" + this.url);\r\n                    }, this)\r\n                });\r\n            }\r\n        },\r\n\r\n        loadedData: function() {\r\n            Adapt.trigger('adaptCollection:dataLoaded');\r\n        }\r\n\r\n    });\r\n\r\n    return AdaptCollection;\r\n\r\n});\r\n\n","define('core/js/device',['require','coreJS/adapt','coreJS/libraries/bowser'],function(require) {\r\n\r\n    var Adapt = require('coreJS/adapt');\r\n    var Bowser = require('coreJS/libraries/bowser');\r\n    var $window = $(window);\r\n\r\n    Adapt.device = {\r\n        touch: Modernizr.touch,\r\n        screenWidth: getScreenWidth()\r\n    };\r\n\r\n    Adapt.once('app:dataReady', function() {\r\n        Adapt.device.screenSize = checkScreenSize();\r\n\r\n        $('html').addClass(\"size-\" + Adapt.device.screenSize);\r\n\r\n        // As Adapt.config is available it's ok to bind the 'resize'.\r\n        $window.on('resize', onWindowResize);\r\n    });\r\n\r\n    /**\r\n     * Compares the calculated screen width to the breakpoints defined in config.json.\r\n     * \r\n     * @returns {string} 'large', 'medium' or 'small'\r\n     */\r\n    function checkScreenSize() {\r\n        var screenSizeConfig = Adapt.config.get('screenSize');\r\n        var screenSize;\r\n\r\n        if (Adapt.device.screenWidth > screenSizeConfig.medium) {\r\n            screenSize = 'large';\r\n        } else if (Adapt.device.screenWidth > screenSizeConfig.small) {\r\n            screenSize = 'medium';\r\n        } else {\r\n            screenSize = 'small';\r\n        }\r\n\r\n        return screenSize;\r\n    }\r\n\r\n    function getScreenWidth() {\r\n        return isAppleDevice()\r\n            ? getAppleScreenWidth()\r\n            : window.innerWidth || $window.width();\r\n    }\r\n\r\n    var onWindowResize = _.debounce(function onScreenSizeChanged() {\r\n        // Calculate the screen width.\r\n        Adapt.device.screenWidth = getScreenWidth();\r\n\r\n        var newScreenSize = checkScreenSize();\r\n\r\n        if (newScreenSize !== Adapt.device.screenSize) {\r\n            Adapt.device.screenSize = newScreenSize;\r\n\r\n            $('html').removeClass(\"size-small size-medium size-large\").addClass(\"size-\" + Adapt.device.screenSize);\r\n\r\n            Adapt.trigger('device:changed', Adapt.device.screenSize);\r\n        }\r\n\r\n\t    Adapt.trigger('device:resize', Adapt.device.screenWidth);\r\n\r\n    }, 100);\r\n\r\n    var browser = Bowser.name;\r\n    var version = Bowser.version;\r\n    var OS = Bowser.osversion;\r\n\r\n    // Bowser only checks against navigator.userAgent so if the OS is undefined, do a check on the navigator.platform\r\n    if (OS == undefined) OS = getPlatform();\r\n\r\n    function isAppleDevice() {\r\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n    }\r\n\r\n    function getAppleScreenWidth() {\r\n        return (Math.abs(window.orientation) === 90) ? screen.height : screen.width;\r\n    }\r\n\r\n    function getPlatform() {\r\n\r\n        var platform = navigator.platform;\r\n\r\n        if (platform.indexOf(\"Win\") != -1) {\r\n            return \"Windows\";\r\n        } else if (platform.indexOf(\"Mac\") != -1) {\r\n            return \"Mac\";\r\n        } else if (platform.indexOf(\"Linux\") != -1) {\r\n            return \"Linux\";\r\n        }\r\n\r\n        return \"PlatformUnknown\";\r\n    }\r\n\r\n    function pixelDensity() {\r\n        var fltPixelDensity = ( window.devicePixelRatio || 1 );\r\n\r\n        if( fltPixelDensity >= 3 ) {\r\n            return 'ultra-high';\r\n        } else if( fltPixelDensity >= 2 ) {\r\n            return 'high';\r\n        } else if( fltPixelDensity >= 1.5 ) {\r\n            return 'medium';\r\n        } else {\r\n            return 'low';\r\n        }\r\n    }\r\n\r\n    var browserString = browser + \" version-\" + version + \" OS-\" + OS;\r\n\t/* MAKE DEVICE IDENTIFICATION UNIFORM CASE */\r\n    Adapt.device.browser = browser ? browser.toLowerCase() : \"\";\r\n    Adapt.device.version = version ? version.toLowerCase() : \"\";\r\n    Adapt.device.OS = OS ? OS.toLowerCase() : \"\";\r\n    browserString = browserString.replace(\"Internet Explorer\", \"ie\");\r\n\r\n    $(\"html\").addClass(browserString + ' pixel-density-' + pixelDensity());\r\n\r\n});\r\n\n","define('core/js/views/drawerView',['require','backbone','coreJS/adapt'],function(require) {\r\n\r\n    var Backbone = require('backbone');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var DrawerView = Backbone.View.extend({\r\n\r\n        className: 'drawer display-none',\r\n        disableAnimation: false,\r\n        escapeKeyAttached: false,\r\n\r\n        initialize: function() {\r\n            this.disableAnimation = Adapt.config.has('_disableAnimation') ? Adapt.config.get('_disableAnimation') : false;\r\n            this._isVisible = false;\r\n            this.drawerDir = 'right';\r\n            if(Adapt.config.get('_defaultDirection')=='rtl'){//on RTL drawer on the left\r\n                this.drawerDir = 'left';\r\n            }\r\n            this.setupEventListeners();\r\n            this.render();\r\n            this.drawerDuration = Adapt.config.get('_drawer')._duration;\r\n            this.drawerDuration = (this.drawerDuration) ? this.drawerDuration : 400;\r\n            // Setup cached selectors\r\n            this.$wrapper = $('#wrapper');\r\n        },\r\n\r\n        setupEventListeners: function() {\r\n            this.listenTo(Adapt, 'navigation:toggleDrawer', this.toggleDrawer);\r\n            this.listenTo(Adapt, 'drawer:triggerCustomView', this.openCustomView);\r\n            this.listenToOnce(Adapt, 'adapt:initialize', this.checkIfDrawerIsAvailable);\r\n            this.listenTo(Adapt, 'drawer:closeDrawer', this.onCloseDrawer);\r\n            this.listenTo(Adapt, 'remove', this.onCloseDrawer);\r\n            this.listenTo(Adapt, 'accessibility:toggle', this.onAccessibilityToggle);\r\n            this._onKeyUp = _.bind(this.onKeyUp, this);\r\n            this.setupEscapeKey();\r\n        },\r\n\r\n        setupEscapeKey: function() {\r\n            var hasAccessibility = Adapt.config.has('_accessibility') && Adapt.config.get('_accessibility')._isActive;\r\n\r\n            if (!hasAccessibility && ! this.escapeKeyAttached) {\r\n                $(window).on(\"keyup\", this._onKeyUp);\r\n                this.escapeKeyAttached = true;\r\n            } else {\r\n                $(window).off(\"keyup\", this._onKeyUp);\r\n                this.escapeKeyAttached = false;\r\n            }\r\n        },\r\n\r\n        onAccessibilityToggle: function() {\r\n            this.setupEscapeKey();\r\n        },\r\n\r\n        onKeyUp: function(event) {\r\n            if (event.which != 27) return;\r\n            event.preventDefault();\r\n\r\n            this.onCloseDrawer();\r\n        },\r\n\r\n        events: {\r\n            'click .drawer-back': 'onBackButtonClicked',\r\n            'click .drawer-close':'onCloseDrawer'\r\n        },\r\n\r\n        render: function() {\r\n            var template = Handlebars.templates['drawer']\r\n            $(this.el).html(template({_globals: Adapt.course.get(\"_globals\")})).prependTo('body');\r\n            var shadowTemplate = Handlebars.templates['shadow'];\r\n            $(shadowTemplate()).prependTo('body');\r\n            // Set defer on post render\r\n            _.defer(_.bind(function() {\r\n                this.postRender();\r\n            }, this));\r\n            return this;\r\n        },\r\n\r\n        // Set tabindex for select elements\r\n        postRender: function() {\r\n            this.$('a, button, input, select, textarea').attr('tabindex', -1);\r\n        },\r\n\r\n        openCustomView: function(view, hasBackButton) {\r\n            // Set whether back button should display\r\n            this._hasBackButton = hasBackButton;\r\n            this._isCustomViewVisible = true;\r\n            Adapt.trigger('drawer:empty');\r\n            this.showDrawer();\r\n            this.$('.drawer-holder').html(view);\r\n        },\r\n\r\n        checkIfDrawerIsAvailable: function() {\r\n            if(this.collection.length == 0) {\r\n                $('.navigation-drawer-toggle-button').addClass('display-none');\r\n                Adapt.trigger('drawer:noItems');\r\n            }\r\n        },\r\n\r\n        onBackButtonClicked: function(event) {\r\n            event.preventDefault();\r\n            this.showDrawer(true);\r\n        },\r\n\r\n        onCloseDrawer: function(event) {\r\n            if (event) {\r\n                event.preventDefault();\r\n            }\r\n            this.hideDrawer();\r\n        },\r\n\r\n        toggleDrawer: function() {\r\n            if (this._isVisible && this._isCustomViewVisible === false) {\r\n                this.hideDrawer();\r\n            } else {\r\n                this.showDrawer(true);\r\n            }\r\n        },\r\n\r\n        showDrawer: function(emptyDrawer) {\r\n            this.$el.removeClass('display-none');\r\n            //only trigger popup:opened if drawer is visible, pass popup manager drawer element\r\n            if (!this._isVisible) {\r\n                Adapt.trigger('popup:opened', this.$el);\r\n                $('body').scrollDisable();\r\n                this._isVisible = true;\r\n            }\r\n\r\n            var drawerWidth = this.$el.width();\r\n            // Sets tab index to 0 for all tabbable elements in Drawer\r\n            this.$('a, button, input, select, textarea').attr('tabindex', 0);\r\n\r\n            if (emptyDrawer) {\r\n                this.$('.drawer-back').addClass('display-none');\r\n                this._isCustomViewVisible = false;\r\n                this.emptyDrawer();\r\n                if(this.collection.models.length === 1) {\r\n                    Adapt.trigger(this.collection.models[0].get('eventCallback'));\r\n                } else {\r\n                    this.renderItems();\r\n                    Adapt.trigger('drawer:openedItemView');\r\n                }\r\n            } else {\r\n                if (this._hasBackButton && this.collection.models.length > 1) {\r\n                    this.$('.drawer-back').removeClass('display-none');\r\n                } else {\r\n                    this.$('.drawer-back').addClass('display-none');\r\n                }\r\n                Adapt.trigger('drawer:openedCustomView');\r\n            }\r\n\r\n            //delay drawer animation until after background fadeout animation is complete\r\n            if (this.disableAnimation) {\r\n                $('#shadow').removeClass(\"display-none\");\r\n\r\n                var direction={};\r\n                direction[this.drawerDir]=0;\r\n                this.$el.css(direction);\r\n                complete.call(this);\r\n                \r\n            } else {\r\n\r\n                $('#shadow').velocity({opacity:1},{duration:this.drawerDuration, begin: _.bind(function() {\r\n                    $(\"#shadow\").removeClass(\"display-none\");\r\n                    complete.call(this);\r\n                }, this)});\r\n\r\n                var showEasingAnimation = Adapt.config.get('_drawer')._showEasing;\r\n                var easing = (showEasingAnimation) ? showEasingAnimation : 'easeOutQuart';\r\n                var direction={};\r\n                direction[this.drawerDir]=0;\r\n                this.$el.velocity(direction, this.drawerDuration, easing);\r\n\r\n            }\r\n\r\n            function complete() {\r\n                this.addShadowEvent();\r\n                Adapt.trigger('drawer:opened');\r\n                \r\n                //focus on first tabbable element in drawer\r\n                this.$el.a11y_focus();\r\n\t\t\t}\r\n\r\n        },\r\n\r\n        emptyDrawer: function() {\r\n            this.$('.drawer-holder').empty();\r\n        },\r\n\r\n        renderItems: function() {\r\n            Adapt.trigger('drawer:empty');\r\n            this.emptyDrawer();\r\n            var models = this.collection.models;\r\n            for (var i = 0, len = models.length; i < len; i++) {\r\n                var item = models[i];\r\n                new DrawerItemView({model: item});\r\n            }\r\n        },\r\n\r\n        hideDrawer: function() {\r\n            //only trigger popup:closed if drawer is visible\r\n            if (this._isVisible) {\r\n                Adapt.trigger('popup:closed');\r\n                this._isVisible = false;\r\n                $('body').scrollEnable();\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (this.disableAnimation) {\r\n\r\n                var direction={};\r\n                direction[this.drawerDir]=-this.$el.width();\r\n                this.$el.css(direction).addClass('display-none');\r\n\r\n                $('#shadow').addClass(\"display-none\");\r\n\r\n                Adapt.trigger('drawer:closed');\r\n\r\n            } else {\r\n\r\n                var showEasingAnimation = Adapt.config.get('_drawer')._hideEasing;\r\n                var easing = (showEasingAnimation) ? showEasingAnimation : 'easeOutQuart';\r\n\r\n                var direction={};\r\n                direction[this.drawerDir]=-this.$el.width();\r\n                this.$el.velocity(direction, this.drawerDuration, easing, _.bind(function() {\r\n                    this.$el.addClass('display-none');\r\n                    Adapt.trigger('drawer:closed');\r\n                }, this));\r\n\r\n                $('#shadow').velocity({opacity:0}, {duration:this.drawerDuration, complete:function() {\r\n                    $('#shadow').addClass(\"display-none\");\r\n                }});\r\n\r\n            }\r\n\r\n            this._isCustomViewVisible = false;\r\n            this.removeShadowEvent();\r\n\r\n\r\n        },\r\n\r\n        addShadowEvent: function() {\r\n            $('#shadow').one('click touchstart', _.bind(function() {\r\n                this.onCloseDrawer();\r\n            }, this));\r\n        },\r\n\r\n        removeShadowEvent: function() {\r\n            $('#shadow').off('click touchstart');\r\n        },\r\n\r\n        remove: function() {\r\n            Backbone.View.prototype.remove.apply(this, arguments);\r\n            $(window).off(\"keyup\", this._onKeyUp);\r\n\r\n            Adapt.trigger('drawer:empty');\r\n            this.collection.reset();\r\n            $('#shadow').remove();\r\n        }\r\n\r\n    });\r\n\r\n    var DrawerItemView = Backbone.View.extend({\r\n\r\n        className: 'drawer-item',\r\n\r\n        initialize: function() {\r\n            this.listenTo(Adapt, 'drawer:empty', this.remove);\r\n            this.render();\r\n        },\r\n\r\n        events: {\r\n            'click .drawer-item-open': 'onDrawerItemClicked'\r\n        },\r\n\r\n        render: function() {\r\n            var data = this.model.toJSON();\r\n            var template = Handlebars.templates['drawerItem']\r\n            $(this.el).html(template(data)).appendTo('.drawer-holder');\r\n            return this;\r\n        },\r\n\r\n        onDrawerItemClicked: function(event) {\r\n            event.preventDefault();\r\n            var eventCallback = this.model.get('eventCallback');\r\n            Adapt.trigger(eventCallback);\r\n        }\r\n    });\r\n\r\n    return DrawerView;\r\n});\r\n\n","define('core/js/drawer',['require','coreViews/drawerView','coreJS/adapt'],function(require) {\r\n\r\n\tvar DrawerView = require('coreViews/drawerView');\r\n\tvar DrawerCollection = new Backbone.Collection();\r\n\tvar Adapt = require('coreJS/adapt');\r\n\r\n\tvar Drawer = {};\r\n\r\n\tDrawer.addItem = function(drawerObject, eventCallback) {\r\n\t\tdrawerObject.eventCallback = eventCallback;\r\n\t\tDrawerCollection.add(drawerObject);\r\n\t};\r\n\r\n\tDrawer.triggerCustomView = function(view, hasBackButton) {\r\n\t\tif (hasBackButton !== false) {\r\n\t\t\thasBackButton = true;\r\n\t\t}\r\n\t\tAdapt.trigger('drawer:triggerCustomView', view, hasBackButton);\r\n\t};\r\n\r\n\tvar init = function() {\r\n\t\tvar drawerView = new DrawerView({collection: DrawerCollection});\r\n\r\n\t\tAdapt.on('app:languageChanged', function() {\r\n\t\t\tdrawerView.remove();\r\n\t\t\tdrawerView = new DrawerView({collection: DrawerCollection}); \r\n\t\t});\r\n\t};\r\n\r\n\tAdapt.once('app:dataReady', function() {\r\n\t\tinit();\r\n\t});\r\n\r\n\tAdapt.drawer = Drawer;\r\n\r\n});\r\n\n","define('core/js/views/notifyView',['require','coreJS/adapt'],function(require) {\r\n\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var NotifyView = Backbone.View.extend({\r\n\r\n        className: 'notify',\r\n        disableAnimation: false,\r\n        escapeKeyAttached: false,\r\n\r\n        initialize: function() {\r\n            this.disableAnimation = Adapt.config.has('_disableAnimation') ? Adapt.config.get('_disableAnimation') : false;\r\n\r\n            this.setupEventListeners();\r\n\r\n            //include accessibility globals in notify model\r\n            this.model.set('_globals', Adapt.course.get('_globals'));\r\n            this.render();\r\n        },\r\n\r\n        setupEventListeners: function() {\r\n            this.listenTo(Adapt, 'remove', this.remove);\r\n            this.listenTo(Adapt, 'device:resize', this.resetNotifySize);\r\n            this.listenTo(Adapt, 'accessibility:toggle', this.onAccessibilityToggle);\r\n            this._onKeyUp = _.bind(this.onKeyUp, this);\r\n            this.setupEscapeKey();\r\n        },\r\n\r\n        setupEscapeKey: function() {\r\n            var hasAccessibility = Adapt.config.has('_accessibility') && Adapt.config.get('_accessibility')._isActive;\r\n\r\n            if (!hasAccessibility && ! this.escapeKeyAttached) {\r\n                $(window).on(\"keyup\", this._onKeyUp);\r\n                this.escapeKeyAttached = true;\r\n            } else {\r\n                $(window).off(\"keyup\", this._onKeyUp);\r\n                this.escapeKeyAttached = false;\r\n            }\r\n        },\r\n\r\n        onAccessibilityToggle: function() {\r\n            this.setupEscapeKey();\r\n        },\r\n\r\n        onKeyUp: function(event) {\r\n            if (event.which != 27) return;\r\n            event.preventDefault();\r\n\r\n            this.closeNotify();\r\n        },\r\n\r\n        events: {\r\n            'click .notify-popup-alert-button':'onAlertButtonClicked',\r\n            'click .notify-popup-prompt-button': 'onPromptButtonClicked',\r\n            'click .notify-popup-done': 'onCloseButtonClicked',\r\n            'click .notify-shadow': 'onCloseButtonClicked'\r\n        },\r\n\r\n        render: function() {\r\n            var data = this.model.toJSON();\r\n            var template = Handlebars.templates['notify'];\r\n\r\n            //hide notify container\r\n            this.$el.css(\"visibility\", \"hidden\");\r\n            //attach popup + shadow\r\n            this.$el.html(template(data)).prependTo('body');\r\n            //hide popup\r\n            this.$('.notify-popup').css(\"visibility\", \"hidden\");\r\n            //show notify container\r\n            this.$el.css(\"visibility\", \"visible\");\r\n\r\n            this.showNotify();\r\n            return this;\r\n        },\r\n\r\n        onAlertButtonClicked: function(event) {\r\n            event.preventDefault();\r\n            //tab index preservation, notify must close before subsequent callback is triggered\r\n            this.closeNotify();\r\n            Adapt.trigger(this.model.get('_callbackEvent'), this);\r\n        },\r\n\r\n        onPromptButtonClicked: function(event) {\r\n            event.preventDefault();\r\n            //tab index preservation, notify must close before subsequent callback is triggered\r\n            this.closeNotify();\r\n            Adapt.trigger($(event.currentTarget).attr('data-event'));\r\n        },\r\n\r\n        onCloseButtonClicked: function(event) {\r\n            event.preventDefault();\r\n            //tab index preservation, notify must close before subsequent callback is triggered\r\n            this.closeNotify();\r\n            Adapt.trigger(\"notify:cancelled\");\r\n        },\r\n\r\n        resetNotifySize: function() {\r\n            $('.notify-popup').removeAttr('style');\r\n\r\n            this.resizeNotify();\r\n        },\r\n\r\n        resizeNotify: function() {\r\n            var windowHeight = $(window).height();\r\n            var notifyHeight = this.$('.notify-popup').outerHeight();\r\n\r\n            if (notifyHeight > windowHeight) {\r\n                this.$('.notify-popup').css({\r\n                    'height':'100%',\r\n                    'top':0,\r\n                    'overflow-y': 'scroll',\r\n                    '-webkit-overflow-scrolling': 'touch'\r\n                });\r\n            } else {\r\n                this.$('.notify-popup').css({\r\n                    'margin-top': -(notifyHeight/2)\r\n                });\r\n            }\r\n        },\r\n\r\n        showNotify: function() {\r\n\r\n            Adapt.trigger('notify:opened', this);\r\n\r\n            if (this.$(\"img\").length > 0) {\r\n                this.$el.imageready( _.bind(loaded, this));\r\n            } else {\r\n                loaded.call(this);\r\n            }\r\n\r\n            function loaded() {\r\n                if (this.disableAnimation) {\r\n                    this.$('.notify-shadow').css(\"display\", \"block\");\r\n                } else {\r\n\r\n                    this.$('.notify-shadow').velocity({ opacity: 0 }, {duration:0}).velocity({ opacity: 1 }, {duration:400, begin: _.bind(function() {\r\n                        this.$('.notify-shadow').css(\"display\", \"block\");\r\n                    }, this)});\r\n\r\n                }\r\n\r\n                this.resizeNotify();\r\n\r\n                if (this.disableAnimation) {\r\n\r\n                    this.$('.notify-popup').css(\"visibility\", \"visible\");\r\n                    complete.call(this);\r\n                    \r\n                } else {\r\n\r\n                    this.$('.notify-popup').velocity({ opacity: 0 }, {duration:0}).velocity({ opacity: 1 }, { duration:400, begin: _.bind(function() {\r\n                        this.$('.notify-popup').css(\"visibility\", \"visible\");\r\n                        complete.call(this);\r\n                    }, this) });\r\n\r\n                }\r\n                \r\n                function complete() {\r\n                    /*ALLOWS POPUP MANAGER TO CONTROL FOCUS*/\r\n                    Adapt.trigger('popup:opened', this.$('.notify-popup'));\r\n                    $('body').scrollDisable();\r\n                    \r\n                    //set focus to first accessible element\r\n                    this.$('.notify-popup').a11y_focus();\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        closeNotify: function (event) {\r\n\r\n            if (this.disableAnimation) {\r\n\r\n                this.$('.notify-popup').css(\"visibility\", \"hidden\");\r\n                this.$el.css(\"visibility\", \"hidden\");\r\n\r\n                this.remove();\r\n\r\n            } else {\r\n\r\n                this.$('.notify-popup').velocity({ opacity: 0 }, {duration:400, complete: _.bind(function() {\r\n                    this.$('.notify-popup').css(\"visibility\", \"hidden\");\r\n                }, this)});\r\n\r\n                this.$('.notify-shadow').velocity({ opacity: 0 }, {duration:400, complete:_.bind(function() {\r\n                    this.$el.css(\"visibility\", \"hidden\");\r\n                    this.remove();\r\n                }, this)});\r\n            }\r\n\r\n            $('body').scrollEnable();\r\n            Adapt.trigger('popup:closed');\r\n            Adapt.trigger('notify:closed');\r\n        }\r\n\r\n    });\r\n\r\n    return NotifyView;\r\n\r\n});\r\n\n","define('core/js/views/notifyPushView',['require','backbone','coreJS/adapt'],function(require) {\r\n\r\n\tvar Backbone = require('backbone');\r\n\tvar Adapt = require('coreJS/adapt');\r\n\r\n\tvar NotifyPushView = Backbone.View.extend({\r\n\r\n\t\tclassName: 'notify-push',\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo(Adapt, 'notify:pushShown notify:pushRemoved', this.updateIndexPosition);\r\n\t\t\tthis.listenTo(this.model.collection, 'remove', this.updateIndexPosition);\r\n\t\t\tthis.listenTo(this.model.collection, 'change:_index', this.updatePushPosition);\r\n\t\t\t//include accessibility globals in notify model\r\n\t\t\tthis.model.set('_globals', Adapt.course.get('_globals'));\r\n\t\t\tthis.listenTo(Adapt, 'remove', this.remove);\r\n\t\t\tthis.preRender();\r\n\t\t\tthis.render();\r\n\t\t},\r\n\r\n\t\tevents: {\r\n\t\t\t'click .notify-push-close': 'closePush',\r\n\t\t\t'click .notify-push-inner': 'triggerEvent'\r\n\t\t},\r\n\r\n\t\tpreRender: function() {\r\n\t\t\tthis.hasBeenRemoved = false;\r\n\t\t},\r\n\r\n\t\trender: function() {\r\n\r\n            var data = this.model.toJSON();\r\n            var template = Handlebars.templates['notifyPush'];\r\n            this.$el.html(template(data)).appendTo('#wrapper');\r\n\r\n            _.defer(_.bind(function() {\r\n                this.postRender();\r\n            }, this));\r\n\r\n            return this;\r\n\t\t},\r\n\r\n\t\tpostRender: function() {\r\n\r\n\t\t\tthis.$el.addClass('show');\r\n\r\n\t\t\t_.delay(_.bind(function() {\r\n\t\t\t\tthis.closePush();\r\n\t\t\t}, this), this.model.get('_timeout'));\r\n\r\n\t\t\tAdapt.trigger('notify:pushShown');\r\n\r\n\t\t},\r\n\r\n\t\tclosePush: function(event) {\r\n\r\n\t\t\tif (event) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\t// Check whether this view has been removed as the delay can cause it to be fired twice\r\n\t\t\tif (this.hasBeenRemoved === false) {\r\n\r\n\t\t\t\tthis.hasBeenRemoved = true;\r\n\r\n\t\t\t\tthis.$el.removeClass('show');\r\n\r\n\t\t\t\t_.delay(_.bind(function() {\r\n\t\t\t\t\tthis.model.collection.remove(this.model);\r\n\t\t\t\t\tAdapt.trigger('notify:pushRemoved', this);\r\n\t\t\t\t\tthis.remove();\r\n\t\t\t\t}, this), 600);\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttriggerEvent: function(event) {\r\n\r\n\t\t\tAdapt.trigger(this.model.get('_callbackEvent'));\r\n\t\t\tthis.closePush();\r\n\r\n\t\t},\r\n\r\n\t\tupdateIndexPosition: function() {\r\n\t\t\tif (!this.hasBeenRemoved) {\r\n\t\t\t\tvar models = this.model.collection.models;\r\n\t\t\t\tfor (var i = 0 , len = models.length; i < len; i++) {\r\n\t\t\t\t\tvar index = i;\r\n\t\t\t\t\tvar model = models[i];\r\n\t\t\t\t\tif (model.get('_isActive') === true) {\r\n\t\t\t\t\t\tmodel.set('_index', index);\r\n\t\t\t\t\t\tthis.updatePushPosition();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdatePushPosition: function() {\r\n\t\t\tif (this.hasBeenRemoved) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (this.model.get('_index') != undefined) {\r\n\t\t\t\tvar elementHeight = this.$el.height();\r\n\t\t\t\tvar offset = 20;\r\n\t\t\t\tvar navigationHeight = $('.navigation').height();\r\n\t\t\t\tvar currentIndex = this.model.get('_index');\r\n\t\t\t\tvar flippedIndex = (currentIndex == 0) ? 1 : 0;\r\n\t\t\t\tif (this.model.collection.where({_isActive:true}).length === 1) {\r\n\t\t\t\t\tflippedIndex = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvar positionLowerPush = (elementHeight + offset) * flippedIndex + navigationHeight + offset;\r\n\t\t\t\tthis.$el.css('top', positionLowerPush);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn NotifyPushView;\r\n\r\n});\r\n\n","define('core/js/models/notifyModel',['require','backbone'],function(require) {\r\n\r\n\tvar Backbone = require('backbone');\r\n\r\n    var NotifyModel = Backbone.Model.extend({\r\n        defaults: {\r\n        \t_isActive:false,\r\n        \t_showIcon:false,\r\n        \t_timeout:3000\r\n        }\r\n    });\r\n\r\n    return NotifyModel;\r\n\r\n});\r\n\n","define('core/js/notify',['require','coreJS/adapt','coreViews/notifyView','coreViews/notifyPushView','coreModels/notifyModel'],function(require) {\r\n\r\n\tvar Adapt = require('coreJS/adapt');\r\n\tvar NotifyView = require('coreViews/notifyView');\r\n\tvar NotifyPushView = require('coreViews/notifyPushView');\r\n\tvar NotifyModel = require('coreModels/notifyModel');\r\n\r\n\t// Build a collection to store push notifications\r\n\tvar NotifyPushCollection = Backbone.Collection.extend({\r\n\r\n\t\tmodel: NotifyModel,\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.listenTo(this, 'add', this.onPushAdded);\r\n\t\t\tthis.listenTo(Adapt, 'notify:pushRemoved', this.onRemovePush);\r\n\t\t},\r\n\r\n\t\tonPushAdded: function(model) {\r\n\t\t\tthis.checkPushCanShow(model);\r\n\t\t},\r\n\r\n\t\tcheckPushCanShow: function(model) {\r\n\t\t\tif (this.canShowPush()) {\r\n\t\t\t\tmodel.set('_isActive', true);\r\n\t\t\t\tthis.showPush(model);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcanShowPush: function() {\r\n\t\t\tvar availablePushNotifications = this.where({_isActive:true});\r\n\t\t\tif (availablePushNotifications.length >= 2) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tshowPush: function(model) {\r\n\t\t\tnew NotifyPushView({\r\n\t\t\t\tmodel: model\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonRemovePush: function(view) {\r\n\t\t\tvar inactivePushNotifications = this.where({_isActive:false});\r\n\t\t\tif (inactivePushNotifications.length > 0) {\r\n\t\t\t\tthis.checkPushCanShow(inactivePushNotifications[0]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tvar NotifyPushes = new NotifyPushCollection();\r\n\r\n\tAdapt.on('notify:alert', function(notifyObject) {\r\n\t\taddNotifyView('alert', notifyObject);\r\n\t});\r\n\r\n\tAdapt.on('notify:prompt', function(notifyObject) {\r\n\t\taddNotifyView('prompt', notifyObject);\r\n\t});\r\n\r\n\tAdapt.on('notify:popup', function(notifyObject) {\r\n\t\taddNotifyView('popup', notifyObject);\r\n\t});\r\n\r\n\tAdapt.on('notify:push', function(notifyObject) {\r\n\t\taddNotifyView('push', notifyObject);\r\n\t});\r\n\r\n\tfunction addNotifyView(type, notifyObject) {\r\n\t\tnotifyObject._type = type;\r\n\r\n\t\tif (type === 'push') {\r\n\r\n\t\t\tNotifyPushes.push(notifyObject);\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar notify = new NotifyView({\r\n\t\t\tmodel: new NotifyModel(notifyObject)\r\n\t\t});\r\n\r\n\t};\r\n\r\n});\r\n\n","define('core/js/offlineStorage',[\r\n\t'core/js/adapt'\r\n], function(Adapt) {\r\n\r\n\t//Basic API for setting and getting name+value pairs\r\n\t//Allows registration of a single handler.\r\n\r\n\tAdapt.offlineStorage = {\r\n\r\n\t\t/**\r\n\t\t * set to true initially so that if there are no offlineStorage handlers (i.e. if contrib-spoor is not installed)\r\n\t\t * this can still be accessed OK\r\n\t\t */\r\n\t\tready: true,\r\n\r\n\t\t/**\r\n\t\t * set .ready to false if an offlineStorage handler is being attached - we'll need to wait until the handler lets us know\r\n\t\t * it's ready before we can safely use offlineStorage\r\n\t\t */\r\n\t\tinitialize: function(handler) {\r\n\t\t\tthis.ready = false;\r\n\t\t\tthis._handler = handler;\r\n\t\t},\r\n\r\n\t\tset: function(name, value) {\r\n\t\t\tif (!(this._handler && this._handler.set)) return;\r\n\t\t\treturn this._handler.set.apply(this._handler, arguments);\r\n\t\t},\r\n\r\n\t\tget: function(name) {\r\n\t\t\tif (!(this._handler && this._handler.get)) return;\r\n\t\t\treturn this._handler.get.apply(this._handler, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Some forms of offlineStorage could take time to initialise, this allows us to let plugins know when it's ready to be used \r\n\t\t */\r\n\t\tsetReadyStatus: function() {\r\n\t\t\tthis.ready = true;\r\n\t\t\tAdapt.trigger(\"offlineStorage:ready\");\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn Adapt.offlineStorage;\r\n\r\n});\r\n\n","define('core/js/popupManager',['require','coreJS/adapt'],function(require) {\r\n\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    Adapt.on('popup:opened', function($element) {\r\n\r\n\t\t//capture currently active element or element specified\r\n        var $activeElement = $element || $(document.activeElement);\r\n\r\n        //save tab indexes\r\n        $activeElement.a11y_popup();\r\n    });\r\n\r\n    Adapt.on('popup:closed', function() {\r\n\r\n        //restore tab indexes\r\n        $.a11y_popdown();\r\n\r\n    });\r\n\r\n});\r\n\n"," define('core/js/models/routerModel',['require','backbone','coreJS/adapt'],function(require) {\r\n\r\n \tvar Backbone = require('backbone');\r\n \tvar Adapt = require('coreJS/adapt');\r\n\r\n \tvar RouterModel = Backbone.Model.extend({\r\n\r\n \t\tdefaults: {\r\n \t\t\t_canNavigate: true\r\n \t\t},\r\n\r\n \t\tlockedAttributes: {\r\n \t\t\t_canNavigate: false\r\n \t\t}\r\n \t\t\r\n \t});\r\n\r\n \treturn RouterModel;\r\n\r\n });\r\n\n","define('core/js/views/adaptView',[\r\n    'coreJS/adapt'\r\n], function(Adapt) {\r\n\r\n    var AdaptView = Backbone.View.extend({\r\n\r\n        initialize: function() {\r\n            this.listenTo(Adapt, 'remove', this.remove);\r\n            this.listenTo(this.model, 'change:_isVisible', this.toggleVisibility);\r\n            this.model.set('_globals', Adapt.course.get('_globals'));\r\n            this.model.set('_isReady', false);\r\n            this._isRemoved = false;\r\n            this.preRender();\r\n            this.render();\r\n        },\r\n\r\n        preRender: function() {},\r\n\r\n        postRender: function() {\r\n            this.addChildren();\r\n        },\r\n\r\n        render: function() {\r\n            Adapt.trigger(this.constructor.type + 'View:preRender', this);\r\n\r\n            var data = this.model.toJSON();\r\n            var template = Handlebars.templates[this.constructor.template];\r\n            this.$el.html(template(data));\r\n\r\n            _.defer(_.bind(function() {\r\n                // don't call postRender after remove\r\n                if(this._isRemoved) return;\r\n\r\n                this.postRender();\r\n                Adapt.trigger(this.constructor.type + 'View:postRender', this);\r\n            }, this));\r\n\r\n            return this;\r\n        },\r\n\r\n        addChildren: function() {\r\n            var nthChild = 0;\r\n            var children = this.model.getChildren();\r\n            var models = children.models;\r\n            for (var i = 0, len = models.length; i < len; i++) {\r\n                var model = models[i];\r\n                if (model.get('_isAvailable')) {\r\n                    nthChild ++;\r\n\r\n                    var ChildView;\r\n                    var ViewModelObject = this.constructor.childView || Adapt.componentStore[model.get(\"_component\")];\r\n\r\n                    //use view+model object\r\n                    if (ViewModelObject.view) ChildView = ViewModelObject.view;\r\n                    //use view only object\r\n                    else ChildView = ViewModelObject;\r\n\r\n                    if (ChildView) {\r\n                        var $parentContainer = this.$(this.constructor.childContainer);\r\n                        model.set(\"_nthChild\", nthChild);\r\n                        $parentContainer.append(new ChildView({model:model}).$el);\r\n                    } else {\r\n                        throw 'The component \\'' + models[i].attributes._id + '\\'' +\r\n                              ' (\\'' + models[i].attributes._component + '\\')' +\r\n                              ' has not been installed, and so is not available in your project.';\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        setReadyStatus: function() {\r\n            this.model.set('_isReady', true);\r\n        },\r\n\r\n        setCompletionStatus: function() {\r\n            if (this.model.get('_isVisible')) {\r\n                this.model.set('_isComplete', true);\r\n                this.model.set('_isInteractionComplete', true);\r\n            }\r\n        },\r\n\r\n        resetCompletionStatus: function(type) {\r\n            if (!this.model.get(\"_canReset\")) return;\r\n\r\n            var descendantComponents = this.model.findDescendants('components');\r\n            if (descendantComponents.length === 0) {\r\n                this.model.reset(type);\r\n            } else {\r\n                descendantComponents.each(function(model) {\r\n                    model.reset(type);\r\n                });\r\n            }\r\n        },\r\n\r\n        remove: function() {\r\n            this._isRemoved = true;\r\n            this.model.setOnChildren('_isReady', false);\r\n            this.model.set('_isReady', false);\r\n            this.$el.remove();\r\n            this.stopListening();\r\n            return this;\r\n        },\r\n\r\n        setVisibility: function() {\r\n            var visible = \"visibility-hidden\";\r\n            if (this.model.get('_isVisible')) {\r\n                visible = \"\";\r\n            }\r\n            return visible;\r\n        },\r\n\r\n        toggleVisibility: function() {\r\n            if (this.model.get('_isVisible')) {\r\n                return this.$el.removeClass('visibility-hidden');\r\n            }\r\n            this.$el.addClass('visibility-hidden');\r\n        }\r\n\r\n    });\r\n\r\n    return AdaptView;\r\n\r\n});\r\n\n","define('core/js/views/blockView',['require','coreViews/adaptView'],function(require) {\r\n\r\n\tvar AdaptView = require('coreViews/adaptView');\r\n\r\n    var BlockView = AdaptView.extend({\r\n\r\n        className: function() {\r\n            return \"block \"\r\n            + this.model.get('_id')\r\n            + \" \" + this.model.get('_classes')\r\n            + \" \" + this.setVisibility()\r\n            + \" nth-child-\"\r\n            + this.model.get(\"_nthChild\");\r\n        }\r\n\r\n    }, {\r\n        childContainer: '.component-container',\r\n        type: 'block',\r\n        template: 'block'\r\n    });\r\n\r\n    return BlockView;\r\n\r\n});\r\n\n","define('core/js/views/articleView',['require','coreViews/adaptView','coreViews/blockView'],function(require) {\r\n\r\n    var AdaptView = require('coreViews/adaptView');\r\n    var BlockView = require('coreViews/blockView');\r\n\r\n    var ArticleView = AdaptView.extend({\r\n\r\n        className: function() {\r\n            return \"article \"\r\n            + this.model.get('_id')\r\n            + \" \" + this.model.get('_classes')\r\n            + \" \" + this.setVisibility()\r\n            + \" nth-child-\"\r\n            + this.model.get(\"_nthChild\");\r\n        }\r\n\r\n    }, {\r\n        childContainer: '.block-container',\r\n        childView: BlockView,\r\n        type: 'article',\r\n        template: 'article'\r\n    });\r\n\r\n    return ArticleView;\r\n\r\n});\r\n\n","define('core/js/views/pageView',['require','coreViews/adaptView','coreViews/articleView','coreJS/adapt'],function(require) {\r\n\r\n    var AdaptView = require('coreViews/adaptView');\r\n    var ArticleView = require('coreViews/articleView');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var PageView = AdaptView.extend({\r\n\r\n        className: function() {\r\n            return \"page \"\r\n            + this.model.get('_id')\r\n            + \" \" + this.model.get('_classes')\r\n            + \" \" + this.setVisibility();\r\n        },\r\n\r\n        preRender: function() {\r\n            this.disableAnimation = Adapt.config.has('_disableAnimation') ? Adapt.config.get('_disableAnimation') : false;\r\n            this.$el.css('opacity', 0);\r\n            this.listenTo(this.model, 'change:_isReady', this.isReady);\r\n        },\r\n\r\n        isReady: function() {\r\n            if (this.model.get('_isReady')) {\r\n                _.defer(_.bind(function() {\r\n                    $('.loading').hide();\r\n                    $(window).scrollTop(0);\r\n                    Adapt.trigger('pageView:ready', this);\r\n                    var styleOptions = { opacity: 1 };\r\n                    if (this.disableAnimation) {\r\n                        this.$el.css(styleOptions)\r\n                    } else {\r\n                        this.$el.velocity(styleOptions, 'fast');\r\n                    }\r\n                    $(window).scroll();\r\n                }, this));\r\n            }\r\n        }\r\n\r\n    }, {\r\n        childContainer: '.article-container',\r\n        childView: ArticleView,\r\n        type: 'page',\r\n        template: 'page'\r\n    });\r\n\r\n    return PageView;\r\n\r\n});\r\n\n","define('core/js/startController',[\r\n    'core/js/adapt'\r\n], function(Adapt) {\r\n    \r\n    var StartController = function() {\r\n        this.initialize();\r\n    };\r\n\r\n    _.extend(StartController.prototype, {\r\n\r\n        model: null,\r\n\r\n        initialize: function() {\r\n            this.model = new Backbone.Model(Adapt.course.get(\"_start\"));\r\n        },\r\n\r\n        setStartLocation: function() {\r\n            if (!this.isEnabled()) return;\r\n\r\n            window.location.hash = this.getStartHash();\r\n        },\r\n\r\n        getStartHash: function(alwaysForce) {\r\n            var startId = this.getStartId();\r\n\r\n            var hasStartId = (startId)\r\n                ? true\r\n                : false;\r\n\r\n            var isRouteSpecified = (_.indexOf(window.location.href,\"#\") > -1);\r\n            var shouldForceStartId = alwaysForce || this.model.get(\"_force\");\r\n            var shouldNavigateToStartId = hasStartId && (!isRouteSpecified || shouldForceStartId);\r\n\r\n            var startHash = \"#/\";\r\n            if (shouldNavigateToStartId) {\r\n                if (startId !== Adapt.course.get(\"_id\")) {\r\n                    startHash = \"#/id/\"+startId;\r\n                }\r\n            } else {\r\n                //go to specified route or course main menu\r\n                var hasLocationHash = (window.location.hash)\r\n                    ? true\r\n                    : false;\r\n\r\n                startHash = hasLocationHash ? window.location.hash : startHash;\r\n            }\r\n\r\n            return startHash;\r\n        },\r\n\r\n        isEnabled: function() {\r\n            if (!this.model || !this.model.get(\"_isEnabled\")) return false;\r\n            return true;\r\n        },\r\n\r\n        getStartId: function() {\r\n            var startId = this.model.get(\"_id\");\r\n            var startIds = this.model.get(\"_startIds\");\r\n\r\n            var hasStartIdsConfiguration = (startIds && startIds.length > 0);\r\n            if (hasStartIdsConfiguration) {\r\n                for (var i = 0, l =  startIds.length; i < l; i++) {\r\n                    var item = startIds[i];\r\n                    var className =  item._className;\r\n                    var skipIfComplete = item._skipIfComplete;\r\n                    \r\n                    var model = Adapt.findById(item._id);\r\n                    \r\n                    if (!model) {\r\n                        console.log(\"startController: cannot find id\", item._id);\r\n                        continue;\r\n                    }\r\n                    \r\n                    if (skipIfComplete) {\r\n                        if (model.get(\"_isComplete\")) continue;\r\n                    }\r\n\r\n                    if (!className || $(\"html\").is(className)) {\r\n                        startId = item._id;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return startId;\r\n        }\r\n\r\n    });\r\n\r\n    Adapt.once(\"adapt:start\", function() {\r\n        var startController = new StartController();\r\n        startController.setStartLocation();\r\n    });\r\n\r\n    return StartController;\r\n\r\n});\n","define('core/js/router',[\r\n    'coreJS/adapt',\r\n    'coreModels/routerModel',\r\n    'coreViews/pageView',\r\n    'coreJS/startController'\r\n], function(Adapt, RouterModel, PageView) {\r\n\r\n    Adapt.router = new RouterModel(null, {reset: true});\r\n\r\n    var Router = Backbone.Router.extend({\r\n\r\n        initialize: function() {\r\n            this.showLoading();\r\n            // Store #wrapper element to cache for later\r\n            this.$wrapper = $('#wrapper');\r\n            Adapt.once('app:dataReady', function() {\r\n                document.title = Adapt.course.get('title');\r\n            });\r\n            this.listenTo(Adapt, 'navigation:backButton', this.navigateToPreviousRoute);\r\n            this.listenTo(Adapt, 'navigation:homeButton', this.navigateToHomeRoute);\r\n            this.listenTo(Adapt, 'navigation:parentButton', this.navigateToParent);\r\n            this.listenTo(Adapt, \"router:navigateTo\", this.navigateToArguments);\r\n        },\r\n\r\n        routes: {\r\n            \"\":\"handleRoute\",\r\n            \"id/:id\":\"handleRoute\",\r\n            \":pluginName(/*location)(/*action)\": \"handleRoute\"\r\n        },\r\n\r\n        handleRoute: function() {\r\n            var args = [].slice.call(arguments, 0, arguments.length);\r\n            if (arguments[arguments.length-1] === null) args.pop();\r\n\r\n            //check if the current page is in the progress of navigating to itself\r\n            //it will redirect to itself if the url was changed and _canNavigate is false\r\n            if (!this._isCircularNavigationInProgress) {\r\n                //trigger an event pre 'router:location' to allow extensions to stop routing\r\n                Adapt.trigger(\"router:navigate\", arguments);\r\n            }\r\n\r\n            if (Adapt.router.get('_canNavigate')) {\r\n                \r\n                //disable navigation whilst rendering\r\n                Adapt.router.set('_canNavigate', false, {pluginName: \"adapt\"});\r\n\r\n                //only navigate if this switch is set\r\n                switch (args.length) {\r\n                case 1:\r\n                    //if only one parameter assume id\r\n                    return this.handleId.apply(this, arguments);\r\n                case 2:\r\n                    //if two parameters assume plugin\r\n                    return this.handlePluginRouter.apply(this, arguments);\r\n                }\r\n                //if < 1 || > 2 parameters, route to course\r\n                return this.handleCourse();\r\n            }\r\n\r\n            \r\n            if (this._isCircularNavigationInProgress) {\r\n                //navigation correction finished\r\n                //router has successfully renavigated to the current id as the url was changed whilst _canNavigate: false\r\n                delete this._isCircularNavigationInProgress;\r\n                return;\r\n            }\r\n            \r\n            //cancel navigation to stay at current location\r\n            this._isCircularNavigationInProgress = true;\r\n            Adapt.trigger(\"router:navigationCancelled\", arguments);\r\n\r\n            //reset url to current one\r\n            this.navigateToCurrentRoute(true);\r\n\r\n        },\r\n\r\n        handlePluginRouter: function(pluginName, location, action) {\r\n            var pluginLocation = pluginName;\r\n            if (location) {\r\n                pluginLocation = pluginLocation + '-' +location;\r\n                if (action) {\r\n                    pluginLocation = pluginLocation + '-' + action;\r\n                }\r\n            }\r\n            this.updateLocation(pluginLocation);\r\n            Adapt.trigger('router:plugin:' + pluginName, pluginName, location, action);\r\n            Adapt.trigger('router:plugin', pluginName, location, action);\r\n        },\r\n\r\n        handleCourse: function() {\r\n            if (Adapt.course.has('_start')) {\r\n                // Do not allow access to the menu when the start controller is enabled.\r\n                var startController = Adapt.course.get('_start');\r\n                \r\n                if (startController._isEnabled == true && startController._isMenuDisabled == true) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.showLoading();\r\n            this.removeViews();\r\n            Adapt.course.set('_isReady', false);\r\n            this.setContentObjectToVisited(Adapt.course);\r\n            this.updateLocation('course');\r\n            Adapt.once('menuView:ready', function() {\r\n                // Allow navigation\r\n                Adapt.router.set('_canNavigate', true, {pluginName: \"adapt\"});\r\n            });\r\n            Adapt.trigger('router:menu', Adapt.course);\r\n        },\r\n\r\n        handleId: function(id) {\r\n\r\n            var currentModel = Adapt.findById(id);\r\n            var type = '';\r\n            \r\n            if (!currentModel) {\r\n                Adapt.router.set('_canNavigate', true, {pluginName: \"adapt\"});\r\n                return;\r\n            }\r\n\r\n            type = currentModel.get('_type');\r\n\r\n            switch (type) {\r\n                case 'page':\r\n                case 'menu':\r\n                    if (currentModel.get('_isLocked') && Adapt.config.get('_forceRouteLocking')) {\r\n                        console.log('Unable to navigate to locked id: ' + id);\r\n                        Adapt.router.set('_canNavigate', true, {pluginName: \"adapt\"});\r\n                        if (Adapt.location._previousId === undefined) {\r\n                            return this.navigate(\"#/\", {trigger:true, replace:true});\r\n                        } else {\r\n                            return Backbone.history.history.back();\r\n                        }\r\n                    } else {\r\n                        this.showLoading();\r\n                        this.removeViews();\r\n\r\n                        this.setContentObjectToVisited(currentModel);\r\n\r\n                        if (type == 'page') {\r\n                            var location = 'page-' + id;\r\n                            this.updateLocation(location, 'page', id);\r\n                            Adapt.once('pageView:ready', function() {\r\n                                // Allow navigation\r\n                                Adapt.router.set('_canNavigate', true, {pluginName: \"adapt\"});\r\n                            });\r\n                            Adapt.trigger('router:page', currentModel);\r\n                            this.$wrapper.append(new PageView({model: currentModel}).$el);\r\n                        } else {\r\n                            var location = 'menu-' + id;\r\n                            this.updateLocation(location, 'menu', id);\r\n                            Adapt.once('menuView:ready', function() {\r\n                                // Allow navigation\r\n                                Adapt.router.set('_canNavigate', true, {pluginName: \"adapt\"});\r\n                            });\r\n                            Adapt.trigger('router:menu', currentModel);\r\n                        }\r\n                    } \r\n                break;\r\n                default:\r\n                    //allow navigation\r\n                    Adapt.router.set('_canNavigate', true, {pluginName: \"adapt\"});\r\n                    Adapt.navigateToElement('.' + id, {replace: true});\r\n            }\r\n        },\r\n\r\n        removeViews: function() {\r\n            Adapt.trigger('remove');\r\n        },\r\n\r\n        showLoading: function() {\r\n            $('.loading').show();\r\n        },\r\n        \r\n        navigateToArguments: function(args) {\r\n            args = [].slice.call(args, 0, args.length);\r\n            if (args[args.length-1] === null) args.pop();\r\n            switch (args.length) {\r\n            case 0:\r\n                this.navigate(\"#/\", {trigger:false, replace:false});\r\n                break;\r\n            case 1:\r\n                if (Adapt.findById(args[0])) {\r\n                    this.navigate(\"#/id/\"+args[0], {trigger:false, replace:false});\r\n                } else {\r\n                    this.navigate(\"#/\"+args[0], {trigger:false, replace:false});\r\n                }\r\n                break;\r\n            case 2:\r\n                this.navigate(\"#/\"+args[0]+\"/\"+args[1], {trigger:false, replace:false});\r\n                break;\r\n            case 3:\r\n                this.navigate(\"#/\"+args[0]+\"/\"+args[1]+\"/\"+args[2], {trigger:false, replace:false});\r\n                break;\r\n            }\r\n            this.handleRoute.apply(this, args);\r\n        },\r\n\r\n        navigateToPreviousRoute: function(force) {\r\n            // Sometimes a plugin might want to stop the default navigation\r\n            // Check whether default navigation has changed\r\n            if (Adapt.router.get('_canNavigate') || force) {\r\n                if (!Adapt.location._currentId) {\r\n                    return Backbone.history.history.back();\r\n                }\r\n                if (Adapt.location._previousContentType === \"page\" && Adapt.location._contentType === \"menu\") {\r\n                    return this.navigateToParent();\r\n                }\r\n                if (Adapt.location._previousContentType === \"page\") {\r\n                    return Backbone.history.history.back();\r\n                }\r\n                if (Adapt.location._currentLocation === 'course') {\r\n                    return;\r\n                }\r\n                this.navigateToParent();\r\n            }\r\n        },\r\n        \r\n        navigateToHomeRoute: function(force) {\r\n            if (Adapt.router.get('_canNavigate') || force ) {\r\n                this.navigate('#/', {trigger: true});\r\n            }\r\n        },\r\n\r\n        navigateToCurrentRoute: function(force) {\r\n            \r\n            if (Adapt.router.get('_canNavigate') || force) {\r\n                if (!Adapt.location._currentId) {\r\n                    return;\r\n                }\r\n                var currentId = Adapt.location._currentId;\r\n                var route = (currentId === Adapt.course.get(\"_id\")) ? \"#/\" : \"#/id/\" + currentId;\r\n                this.navigate(route, { trigger: true, replace: true });\r\n            }\r\n        },\r\n\r\n        navigateToParent: function(force) {\r\n            if (Adapt.router.get('_canNavigate') || force) {\r\n                var parentId = Adapt.contentObjects.findWhere({_id:Adapt.location._currentId}).get(\"_parentId\");\r\n                var route = (parentId === Adapt.course.get(\"_id\")) ? \"#/\" : \"#/id/\" + parentId;\r\n                this.navigate(route, { trigger: true });  \r\n            }\r\n        },\r\n\r\n        setContentObjectToVisited: function(model) {\r\n            model.set('_isVisited', true);\r\n        },\r\n\r\n        updateLocation: function(currentLocation, type, id) {\r\n            // Handles updating the location\r\n            Adapt.location._previousId = Adapt.location._currentId;\r\n            Adapt.location._previousContentType = Adapt.location._contentType;\r\n\r\n            if (currentLocation === 'course') {\r\n                Adapt.location._currentId = Adapt.course.get('_id');\r\n                Adapt.location._contentType = 'menu';\r\n                Adapt.location._lastVisitedMenu = currentLocation;\r\n            } else if (!type) {\r\n                Adapt.location._currentId = null;\r\n                Adapt.location._contentType = null;\r\n\r\n            } else if (arguments.length === 3) {\r\n                Adapt.location._currentId = id;\r\n                Adapt.location._contentType = type;\r\n                if (type === 'menu') {\r\n                    Adapt.location._lastVisitedType = 'menu';\r\n                    Adapt.location._lastVisitedMenu = id;\r\n                } else if (type === 'page') {\r\n                    Adapt.location._lastVisitedType = 'page';\r\n                    Adapt.location._lastVisitedPage = id;\r\n                }\r\n            }\r\n\r\n            Adapt.location._currentLocation = currentLocation;\r\n\r\n            var classes = (Adapt.location._currentId) ? 'location-'\r\n                    + Adapt.location._contentType\r\n                    + ' location-id-'\r\n                    + Adapt.location._currentId :\r\n                    'location-' + Adapt.location._currentLocation;\r\n            this.$wrapper\r\n                .removeClass()\r\n                .addClass(classes)\r\n                .attr('data-location', Adapt.location._currentLocation);\r\n\r\n            this.setDocumentTitle();\r\n\r\n            // Trigger event when location changes\r\n            Adapt.trigger('router:location', Adapt.location);\r\n        },\r\n\r\n        setDocumentTitle: function() {\r\n            if (!Adapt.location._currentId) return;\r\n\r\n            var currentModel = Adapt.findById(Adapt.location._currentId);\r\n\r\n            var pageTitle = \"\";\r\n            if (currentModel && currentModel.get(\"_type\") !== \"course\") {\r\n                var currentTitle = currentModel.get(\"title\");\r\n                if (currentTitle) pageTitle = \" | \" + currentTitle;\r\n            }\r\n\r\n            var courseTitle = Adapt.course.get(\"title\");\r\n            var documentTitle = $(\"<div>\" + courseTitle + pageTitle + \"</div>\").text();\r\n\r\n            Adapt.once(\"pageView:ready menuView:ready\", function() {\r\n                document.title = documentTitle;\r\n            });\r\n\r\n        }\r\n\r\n\r\n    });\r\n\r\n    return new Router({model: new Backbone.Model()});\r\n\r\n});\r\n\n","define('core/js/models/adaptModel',['require','backbone','coreJS/adapt'],function (require) {\r\n\r\n    var Backbone = require('backbone');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var AdaptModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            _canShowFeedback: true,\r\n            _classes: \"\",\r\n            _canReset: false,\r\n            _isComplete: false,\r\n            _isInteractionComplete: false,\r\n            _requireCompletionOf: -1,\r\n            _isEnabled: true,\r\n            _isResetOnRevisit: false,\r\n            _isAvailable: true,\r\n            _isOptional: false,\r\n            _isReady: false,\r\n            _isVisible: true,\r\n            _isLocked: false\r\n        },\r\n\r\n        initialize: function () {\r\n            // Wait until data is loaded before setting up model\r\n            this.listenToOnce(Adapt, 'app:dataLoaded', this.setupModel);\r\n\r\n        },\r\n\r\n        setupModel: function() {\r\n            if (this.get('_type') === 'page') {\r\n                this._children = 'articles';\r\n            }\r\n            if (this._siblings === 'contentObjects' && this.get('_parentId') !== Adapt.course.get('_id')) {\r\n                this._parent = 'contentObjects';\r\n            }\r\n            if (this._children) {\r\n                //if parent is optional, apply to children\r\n                if (this.get('_isOptional')) this.setOptional(true);\r\n\r\n                this.setupChildListeners();\r\n            }\r\n\r\n            this.init();\r\n            \r\n            _.defer(_.bind(function() {\r\n                if (this._children) {\r\n                    this.checkCompletionStatus();\r\n                    \r\n                    this.checkInteractionCompletionStatus();\r\n                    \r\n                    this.checkLocking();\r\n                }\r\n            }, this));\r\n        },\r\n\r\n        setupChildListeners: function() {\r\n\r\n            if (!this.getChildren()) return;\r\n\r\n            this.listenTo(Adapt[this._children], {\r\n                \"change:_isReady\": this.checkReadyStatus,\r\n                \"change:_isComplete\": this.onIsComplete,\r\n                \"change:_isInteractionComplete\": this.checkInteractionCompletionStatus\r\n            });\r\n\r\n        },\r\n\r\n        init: function() {},\r\n\r\n        reset: function(type, force) {\r\n            if (!this.get(\"_canReset\") && !force) return;\r\n\r\n            type = type || true;\r\n\r\n            switch (type) {\r\n            case \"hard\": case true:\r\n                this.set({\r\n                    _isEnabled: true,\r\n                    _isComplete: false,\r\n                    _isInteractionComplete: false,\r\n                });\r\n                break;\r\n            case \"soft\":\r\n                this.set({\r\n                    _isEnabled: true,\r\n                    _isInteractionComplete: false\r\n                });\r\n                break;\r\n            }\r\n        },\r\n\r\n        checkReadyStatus: function () {\r\n            // Filter children based upon whether they are available\r\n            var availableChildren = new Backbone.Collection(this.getChildren().where({_isAvailable: true}));\r\n            // Check if any return _isReady:false\r\n            // If not - set this model to _isReady: true\r\n            if (availableChildren.findWhere({_isReady: false})) return;\r\n            this.set({_isReady: true});\r\n        },\r\n\r\n        setCompletionStatus: function() {\r\n            if (this.get('_isVisible')) {\r\n                this.set('_isComplete', true);\r\n                this.set('_isInteractionComplete', true);\r\n            }\r\n        },\r\n\r\n        checkCompletionStatus: function () {\r\n            //defer to allow other change:_isComplete handlers to fire before cascasing to parent\r\n            Adapt.checkingCompletion();\r\n            _.defer(_.bind(function() {\r\n\r\n                // Filter children based upon whether they are available\r\n                var availableChildren = new Backbone.Collection(this.getChildren().where({_isAvailable: true}));\r\n                \r\n                var isComplete = false;\r\n                \r\n                //number of mandatory children that must be complete or -1 for all\r\n                var requireCompletionOf = this.get(\"_requireCompletionOf\");\r\n                \r\n                if (requireCompletionOf === -1) {\r\n                    // Check if any return _isComplete:false\r\n                    // If not - set this model to _isComplete: true\r\n                    isComplete = (availableChildren.findWhere({_isComplete: false, _isOptional: false}) === undefined);\r\n                } else {\r\n                    isComplete = (availableChildren.where({_isComplete: true, _isOptional: false}).length >= requireCompletionOf );\r\n                }\r\n    \r\n                this.set({_isComplete: isComplete});\r\n                \r\n                Adapt.checkedCompletion();\r\n            }, this));\r\n        },\r\n\r\n        checkInteractionCompletionStatus: function () {\r\n            //defer to allow other change:_isInteractionComplete handlers to fire before cascasing to parent\r\n            Adapt.checkingCompletion();\r\n            _.defer(_.bind(function() {\r\n                // Filter children based upon whether they are available\r\n                var availableChildren = new Backbone.Collection(this.getChildren().where({_isAvailable: true}));\r\n                \r\n                var isInteractionComplete = false;\r\n                \r\n                //number of mandatory children that must be complete or -1 for all\r\n                var requireCompletionOf = this.get(\"_requireCompletionOf\")\r\n                \r\n                if (requireCompletionOf === -1) {\r\n                    // Check if any return _isInteractionComplete:false\r\n                    // If not - set this model to _isInteractionComplete: true\r\n                    isInteractionComplete = (availableChildren.findWhere({_isInteractionComplete: false, _isOptional: false}) === undefined);\r\n                } else {\r\n                    isInteractionComplete = (availableChildren.where({_isInteractionComplete: true, _isOptional: false}).length >= requireCompletionOf);\r\n                }\r\n    \r\n                this.set({_isInteractionComplete:isInteractionComplete});\r\n                Adapt.checkedCompletion();\r\n\r\n            }, this));\r\n        },\r\n\r\n        findAncestor: function (ancestors) {\r\n\r\n            var parent = this.getParent();\r\n\r\n            if (this._parent === ancestors) {\r\n                return parent;\r\n            }\r\n\r\n            var returnedAncestor = parent.getParent();\r\n\r\n            if (parent._parent !== ancestors) {\r\n                returnedAncestor = returnedAncestor.getParent();\r\n            }\r\n\r\n            // Returns a single model\r\n            return returnedAncestor;\r\n\r\n        },\r\n\r\n        findDescendants: function (descendants) {\r\n\r\n            // first check if descendant is child and return child\r\n            if (this._children === descendants) {\r\n                return this.getChildren();\r\n            }\r\n\r\n            var allDescendants = [];\r\n            var flattenedDescendants;\r\n            var children = this.getChildren();\r\n            var returnedDescedants;\r\n\r\n            function searchChildren(children) {\r\n                var models = children.models;\r\n                for (var i = 0, len = models.length; i < len; i++) {\r\n                    var model = models[i];\r\n                    var childrensModels = model.getChildren().models;\r\n                    allDescendants.push(childrensModels);\r\n                    flattenedDescendants = _.flatten(allDescendants);\r\n                }\r\n\r\n                returnedDescedants = new Backbone.Collection(flattenedDescendants);\r\n\r\n                if (children.models.length === 0 || children.models[0]._children === descendants) {\r\n                    return;\r\n                } else {\r\n                    allDescendants = [];\r\n                    searchChildren(returnedDescedants);\r\n                }\r\n            }\r\n\r\n            searchChildren(children);\r\n\r\n            // returns a collection of children\r\n            return returnedDescedants;\r\n        },\r\n\r\n        getChildren: function () {\r\n            if (this.get(\"_children\")) return this.get(\"_children\");\r\n\r\n            var childrenCollection;\r\n\r\n            if (!this._children) {\r\n                childrenCollection = new Backbone.Collection();\r\n            } else {\r\n                var children = Adapt[this._children].where({_parentId: this.get(\"_id\")});\r\n                childrenCollection = new Backbone.Collection(children);\r\n            }\r\n\r\n            if (this.get('_type') == 'block' && childrenCollection.length == 2\r\n                && childrenCollection.models[0].get('_layout') !== 'left' && this.get('_sortComponents') !== false) {\r\n                // Components may have a 'left' or 'right' _layout,\r\n                // so ensure they appear in the correct order\r\n                // Re-order component models to correct it\r\n                childrenCollection.comparator = '_layout';\r\n                childrenCollection.sort();\r\n            }\r\n\r\n            this.set(\"_children\", childrenCollection);\r\n\r\n            // returns a collection of children\r\n            return childrenCollection;\r\n        },\r\n\r\n        getParent: function () {\r\n            if (this.get(\"_parent\")) return this.get(\"_parent\");\r\n            if (this._parent === \"course\") {\r\n                return Adapt.course;\r\n            }\r\n            var parent = Adapt.findById(this.get(\"_parentId\"));\r\n            this.set(\"_parent\", parent);\r\n\r\n            // returns a parent model\r\n            return parent;\r\n        },\r\n\r\n        getParents: function(shouldIncludeChild) {\r\n            var parents = [];\r\n            var context = this;\r\n            \r\n            if (shouldIncludeChild) parents.push(context);\r\n            \r\n            while (context.has(\"_parentId\")) {\r\n                context = context.getParent();\r\n                parents.push(context);\r\n            }\r\n            \r\n            return parents.length ? new Backbone.Collection(parents) : null;\r\n        },\r\n\r\n        getSiblings: function (passSiblingsAndIncludeSelf) {\r\n            var siblings;\r\n            if (!passSiblingsAndIncludeSelf) {\r\n                // returns a collection of siblings excluding self\r\n                if (this._hasSiblingsAndSelf === false) {\r\n                    return this.get(\"_siblings\");\r\n                }\r\n                siblings = _.reject(Adapt[this._siblings].where({\r\n                    _parentId: this.get(\"_parentId\")\r\n                }), _.bind(function (model) {\r\n                    return model.get('_id') == this.get('_id');\r\n                }, this));\r\n\r\n                this._hasSiblingsAndSelf = false;\r\n\r\n            } else {\r\n                // returns a collection of siblings including self\r\n                if (this._hasSiblingsAndSelf) {\r\n                    return this.get(\"_siblings\");\r\n                }\r\n\r\n                siblings = Adapt[this._siblings].where({\r\n                    _parentId: this.get(\"_parentId\")\r\n                });\r\n                this._hasSiblingsAndSelf = true;\r\n            }\r\n\r\n            var siblingsCollection = new Backbone.Collection(siblings);\r\n            this.set(\"_siblings\", siblingsCollection);\r\n            return siblingsCollection;\r\n        },\r\n\r\n        setOnChildren: function (key, value, options) {\r\n\r\n            var args = arguments;\r\n\r\n            this.set.apply(this, args);\r\n\r\n            if (!this._children) return;\r\n\r\n            var children = this.getChildren();\r\n            var models = children.models;\r\n            for (var i = 0, len = models.length; i < len; i++) {\r\n                var child = models[i];\r\n                child.setOnChildren.apply(child, args);\r\n            }\r\n\r\n        },\r\n\r\n        setOptional: function(value) {\r\n            this.set({_isOptional: value});\r\n        },\r\n\r\n        checkLocking: function() {\r\n            var lockType = this.get(\"_lockType\");\r\n\r\n            if (!lockType) return;\r\n\r\n            switch (lockType) {\r\n                case \"sequential\":\r\n                    this.setSequentialLocking();\r\n                    break;\r\n                case \"unlockFirst\":\r\n                    this.setUnlockFirstLocking();\r\n                    break;\r\n                case \"lockLast\":\r\n                    this.setLockLastLocking();\r\n                    break;\r\n                case \"custom\":\r\n                    this.setCustomLocking();\r\n                    break;\r\n                default:\r\n                    console.warn(\"AdaptModel.checkLocking: unknown _lockType \\\"\" +\r\n                        lockType + \"\\\" found on \" + this.get(\"_id\"));\r\n            }\r\n        },\r\n\r\n        setSequentialLocking: function() {\r\n            var children = this.getChildren().models;\r\n\r\n            for (var i = 1, j = children.length; i < j; i++) {\r\n                children[i].set(\"_isLocked\", !children[i - 1].get(\"_isComplete\"));\r\n            }\r\n        },\r\n\r\n        setUnlockFirstLocking: function() {\r\n            var children = this.getChildren().models;\r\n            var isFirstChildComplete = children[0].get(\"_isComplete\");\r\n\r\n            for (var i = 1, j = children.length; i < j; i++) {\r\n                children[i].set(\"_isLocked\", !isFirstChildComplete);\r\n            }\r\n        },\r\n\r\n        setLockLastLocking: function() {\r\n            var children = this.getChildren().models;\r\n            var lastIndex = children.length - 1;\r\n\r\n            for (var i = lastIndex - 1; i >= 0; i--) {\r\n                if (!children[i].get(\"_isComplete\")) {\r\n                    return children[lastIndex].set(\"_isLocked\", true);\r\n                }\r\n            }\r\n\r\n            children[lastIndex].set(\"_isLocked\", false);\r\n        },\r\n\r\n        setCustomLocking: function() {\r\n            var children = this.getChildren().models;\r\n\r\n            for (var i = 0, j = children.length; i < j; i++) {\r\n                var child = children[i];\r\n\r\n                child.set(\"_isLocked\", this.shouldLock(child));\r\n            }\r\n        },\r\n\r\n        shouldLock: function(child) {\r\n            var lockedBy = child.get(\"_lockedBy\");\r\n\r\n            if (!lockedBy) return false;\r\n\r\n            for (var i = lockedBy.length - 1; i >= 0; i--) {\r\n                var id = lockedBy[i];\r\n\r\n                try {\r\n                    if (!Adapt.findById(id).get(\"_isComplete\")) return true;\r\n                }\r\n                catch (e) {\r\n                    console.warn(\"AdaptModel.shouldLock: unknown _lockedBy ID \\\"\" + id +\r\n                        \"\\\" found on \" + child.get(\"_id\"));\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n        \r\n        onIsComplete: function() {\r\n            this.checkCompletionStatus();\r\n            \r\n            this.checkLocking();\r\n        }\r\n\r\n    });\r\n\r\n    return AdaptModel;\r\n\r\n});\n","define('core/js/models/articleModel',['require','coreModels/adaptModel','coreJS/adapt'],function(require) {\r\n\r\n\tvar AdaptModel = require('coreModels/adaptModel');\r\n\tvar Adapt = require('coreJS/adapt');\r\n\r\n    var ArticleModel = AdaptModel.extend({\r\n        _parent:'contentObjects',\r\n    \t_siblings:'articles',\r\n        _children: 'blocks'\r\n    });\r\n\r\n    return ArticleModel;\r\n\r\n});\r\n\n","define('core/js/models/blockModel',['require','coreModels/adaptModel'],function(require) {\r\n\r\n\tvar AdaptModel = require('coreModels/adaptModel');\r\n\r\n    var BlockModel = AdaptModel.extend({\r\n        _parent:'articles',\r\n    \t_siblings:'blocks',\r\n        _children: 'components',\r\n        \r\n        defaults: function() {\r\n            return _.extend({\r\n                _sortComponents: true\r\n            }, AdaptModel.prototype.defaults);\r\n        }\r\n    });\r\n\r\n    return BlockModel;\r\n\r\n});\r\n\n","define('core/js/models/componentModel',[\r\n    'coreJS/adapt',\r\n    'coreModels/adaptModel'\r\n], function(Adapt, AdaptModel) {\r\n\r\n    var ComponentModel = AdaptModel.extend({\r\n        _parent:'blocks',\r\n    \t_siblings:'components'\r\n    });\r\n\r\n    return ComponentModel;\r\n\r\n});\r\n\n","define('core/js/models/configModel',['require','backbone','coreJS/adapt'],function(require) {\r\n\r\n    var Backbone = require('backbone');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var ConfigModel = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n            screenSize : {\r\n                small: 520,\r\n                medium: 760,\r\n                large: 1024\r\n            },\r\n            _forceRouteLocking: false,\r\n            _canLoadData: true,\r\n            _disableAnimation: false\r\n        },\r\n\r\n        initialize: function(attrs, options) {\r\n            this.url = options.url;\r\n            // Fetch data & if successful trigger event to enable plugins to stop course files loading\r\n            // Then check if course files can load\r\n            // 'configModel:loadCourseData' event starts the core content collections and models being fetched\r\n            this.fetch({\r\n                success: _.bind(function() {\r\n                    Adapt.trigger('configModel:dataLoaded');\r\n                    if (this.get('_canLoadData')) {\r\n                        Adapt.trigger('configModel:loadCourseData');\r\n                    }\r\n                    if(this.get('_defaultDirection')=='rtl'){//We're going to use rtl style\r\n                    \t$('html').addClass('dir-rtl');\r\n                    }\r\n                    // check if animations should be disabled\r\n                    var disableAnimationArray = this.get('_disableAnimationFor');\r\n                    if (disableAnimationArray && disableAnimationArray.length > 0) {\r\n                        for (var i=0; i < disableAnimationArray.length; i++) {\r\n                            if ($(\"html\").is(disableAnimationArray[i])) {\r\n                                this.set('_disableAnimation', true);\r\n                                console.log('Animation disabled.');\r\n                            }\r\n                        }\r\n                    }\r\n                }, this),\r\n                error: function() {\r\n                    console.log('Unable to load course/config.json');\r\n                }\r\n            });\r\n        },\r\n\r\n        loadData: function() {\r\n\r\n        }\r\n\r\n    });\r\n\r\n   return ConfigModel;\r\n\r\n});\r\n\n","define('core/js/models/contentObjectModel',['require','coreModels/adaptModel','coreJS/adapt'],function(require) {\r\n\r\n    var AdaptModel = require('coreModels/adaptModel');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var ContentObjectModel = AdaptModel.extend({\r\n    \t_parent:'course',\r\n    \t_siblings:'contentObjects',\r\n        _children: 'contentObjects'\r\n    });\r\n\r\n    return ContentObjectModel;\r\n});\r\n\n","define('core/js/models/courseModel',['require','coreModels/adaptModel','coreJS/adapt'],function(require) {\r\n\r\n    var AdaptModel = require('coreModels/adaptModel');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var CourseModel = AdaptModel.extend({\r\n\r\n        initialize: function(attrs, options) {\r\n            AdaptModel.prototype.initialize.apply(this, arguments);\r\n            Adapt.trigger('courseModel:dataLoading');\r\n\r\n            this.url = options.url;\r\n\r\n            this.on('sync', this.loadedData, this);\r\n            if (this.url) {\r\n                this.fetch({\r\n                    error: _.bind(function(model, xhr, options) {\r\n                        console.error(\"ERROR: unable to load file \" + this.url);\r\n                    }, this)\r\n                });\r\n            }\r\n        },\r\n\r\n        loadedData: function() {\r\n            Adapt.trigger('courseModel:dataLoaded');\r\n        },\r\n\r\n        _children: \"contentObjects\"\r\n\r\n    });\r\n\r\n    return CourseModel;\r\n\r\n});\r\n\n","define('core/js/models/questionModel',[\r\n    'coreJS/adapt',\r\n    'coreModels/componentModel'\r\n], function(Adapt, ComponentModel) {\r\n\r\n    var QuestionModel = ComponentModel.extend({\r\n\r\n        //////\r\n        // Setup question types\r\n        ////\r\n\r\n        // Used to set model defaults\r\n        defaults: function() {\r\n            // Extend from the ComponentModel defaults\r\n            return _.extend({\r\n                '_isQuestionType': true,\r\n                '_shouldDisplayAttempts': false,\r\n                '_canShowModelAnswer': true,\r\n                '_canShowFeedback': true,\r\n                '_canShowMarking': true,\r\n                '_questionWeight': Adapt.config.get(\"_questionWeight\"),\r\n            }, ComponentModel.prototype.defaults);\r\n        },\r\n\r\n        init: function() {\r\n            this.setupDefaultSettings();\r\n            this.listenToOnce(Adapt, \"adapt:initialize\", this.onAdaptInitialize);\r\n        },\r\n\r\n        // Calls default methods to setup on questions\r\n        setupDefaultSettings: function() {\r\n            // Not sure this is needed anymore, keeping to maintain API\r\n            this.setupWeightSettings();\r\n            this.setupButtonSettings();\r\n        },\r\n\r\n        // Used to setup either global or local button text\r\n        setupButtonSettings: function() {\r\n            var globalButtons = Adapt.course.get(\"_buttons\");\r\n\r\n            // Checks if local _buttons exists and if not use global\r\n            if (!this.has(\"_buttons\")) {\r\n                this.set(\"_buttons\", globalButtons);\r\n            } else {\r\n                // check all the components buttons\r\n                // if they are empty use the global default\r\n                var componentButtons = this.get(\"_buttons\");\r\n\r\n                if (typeof componentButtons.submit == 'undefined') {\r\n                    for (var key in componentButtons) {\r\n                        if (typeof componentButtons[key] == 'object') {\r\n                          // ARIA labels\r\n                          if (!componentButtons[key].buttonText && globalButtons[key].buttonText) {\r\n                            componentButtons[key].buttonText = globalButtons[key].buttonText;\r\n                          }\r\n\r\n                          if (!componentButtons[key].ariaLabel && globalButtons[key].ariaLabel) {\r\n                            componentButtons[key].ariaLabel = globalButtons[key].ariaLabel;\r\n                          }\r\n                        }\r\n\r\n                        if (!componentButtons[key] && globalButtons[key]) {\r\n                            componentButtons[key] = globalButtons[key];\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Backwards compatibility with v1.x\r\n                    var buttons = [];\r\n\r\n                    for (var key in componentButtons) {\r\n                        var index = '_' + key;\r\n\r\n                        if (!componentButtons[key]) {\r\n                            buttons[index] = globalButtons[index];\r\n                        } else {\r\n                            buttons[index] = {\r\n                                buttonText: componentButtons[key],\r\n                                ariaLabel: componentButtons[key]\r\n                            };\r\n                        }\r\n                    }\r\n\r\n                    // HACK - Append other missing values\r\n                    buttons['_showFeedback'] = {\r\n                        buttonText: 'Show feedback',\r\n                        ariaLabel: 'Show feedback'\r\n                    };\r\n\r\n                    this.set('_buttons', buttons);\r\n                }\r\n            }\r\n        },\r\n\r\n        // Used to setup either global or local question weight/score\r\n        setupWeightSettings: function() {\r\n            // Not needed as handled by model defaults, keeping to maintain API\r\n        },\r\n\r\n        //////\r\n        // Selection restoration process\r\n        ////\r\n\r\n\r\n        // Used to add post-load changes to the model\r\n        onAdaptInitialize: function() {\r\n            this.restoreUserAnswers();\r\n        },\r\n\r\n        // Used to restore the user answers \r\n        restoreUserAnswers: function() {},\r\n\r\n        \r\n        //////\r\n        // Submit process\r\n        ////\r\n\r\n        // Use to check if the user is allowed to submit the question\r\n        // Maybe the user has to select an item?\r\n        canSubmit: function() {},\r\n\r\n        // Used to update the amount of attempts the user has left\r\n        updateAttempts: function() {\r\n            if (!this.get('_attemptsLeft')) {\r\n                this.set(\"_attemptsLeft\", this.get('_attempts'));\r\n            }\r\n            this.set(\"_attemptsLeft\", this.get('_attemptsLeft') - 1);\r\n        },\r\n\r\n        // Used to set _isEnabled and _isSubmitted on the model\r\n        setQuestionAsSubmitted: function() {\r\n            this.set({\r\n                _isEnabled: false,\r\n                _isSubmitted: true\r\n            });\r\n        },\r\n\r\n        // This is important for returning or showing the users answer\r\n        // This should preserve the state of the users answers\r\n        storeUserAnswer: function() {},\r\n\r\n        // Sets _isCorrect:true/false based upon isCorrect method below\r\n        markQuestion: function() {\r\n\r\n            if (this.isCorrect()) {\r\n                this.set('_isCorrect', true);\r\n            } else {\r\n                this.set('_isCorrect', false);\r\n            }\r\n\r\n        },\r\n\r\n         // Should return a boolean based upon whether to question is correct or not\r\n        isCorrect: function() {},\r\n\r\n        // Used to set the score based upon the _questionWeight\r\n        setScore: function() {},\r\n\r\n        // Checks if the question should be set to complete\r\n        // Calls setCompletionStatus and adds complete classes\r\n        checkQuestionCompletion: function() {\r\n\r\n            var isComplete = (this.get('_isCorrect') || this.get('_attemptsLeft') === 0);\r\n\r\n            if (isComplete) {\r\n                this.setCompletionStatus();\r\n            }\r\n\r\n            return isComplete;\r\n\r\n        },\r\n\r\n        // Updates buttons based upon question state by setting\r\n        // _buttonState on the model which buttonsView listens to\r\n        updateButtons: function() {\r\n\r\n            var isInteractionComplete = this.get('_isInteractionComplete');\r\n            var isCorrect = this.get('_isCorrect');\r\n            var isEnabled = this.get('_isEnabled');\r\n            var buttonState = this.get('_buttonState');\r\n            var canShowModelAnswer = this.get('_canShowModelAnswer');\r\n\r\n            if (isInteractionComplete) {\r\n\r\n                if (isCorrect || !canShowModelAnswer) {\r\n                    // Use correct instead of complete to signify button state\r\n                    this.set('_buttonState', 'correct');\r\n\r\n                } else {\r\n\r\n                    switch (buttonState) {\r\n                      case \"submit\":\r\n                      case \"hideCorrectAnswer\":\r\n                          this.set('_buttonState', 'showCorrectAnswer');\r\n                          break;\r\n                      default:\r\n                          this.set('_buttonState', 'hideCorrectAnswer');\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                if (isEnabled) {\r\n                    this.set('_buttonState', 'submit');\r\n                } else {\r\n                    this.set('_buttonState', 'reset');\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        // Used to setup the correct, incorrect and partly correct feedback\r\n        setupFeedback: function() {\r\n\r\n            if (this.get('_isCorrect')) {\r\n                this.setupCorrectFeedback();\r\n            } else if (this.isPartlyCorrect()) {\r\n                this.setupPartlyCorrectFeedback();\r\n            } else {\r\n                this.setupIncorrectFeedback();\r\n            }\r\n\r\n        },\r\n\r\n        // Used by the question to determine if the question is incorrect or partly correct\r\n        // Should return a boolean\r\n        isPartlyCorrect: function() {},\r\n\r\n        setupCorrectFeedback: function() {\r\n\r\n            this.set({\r\n                feedbackTitle: this.get('title'),\r\n                feedbackMessage: this.get(\"_feedback\") ? this.get(\"_feedback\").correct : \"\"\r\n            });\r\n\r\n        },\r\n\r\n        setupPartlyCorrectFeedback: function() {\r\n\r\n            if (this.get(\"_feedback\") && this.get('_feedback')._partlyCorrect) {\r\n                if (this.get('_attemptsLeft') === 0 || !this.get('_feedback')._partlyCorrect.notFinal) {\r\n                    if (this.get('_feedback')._partlyCorrect.final) {\r\n                        this.set({\r\n                            feedbackTitle: this.get('title'),\r\n                            feedbackMessage: this.get(\"_feedback\") ? this.get('_feedback')._partlyCorrect.final : \"\"\r\n                        });\r\n                    } else {\r\n                        this.setupIncorrectFeedback();\r\n                    }\r\n                } else {\r\n                    this.set({\r\n                        feedbackTitle: this.get('title'),\r\n                        feedbackMessage: this.get(\"_feedback\") ? this.get('_feedback')._partlyCorrect.notFinal : \"\"\r\n                    });\r\n                }\r\n            } else {\r\n                this.setupIncorrectFeedback();\r\n            }\r\n\r\n        },\r\n\r\n        setupIncorrectFeedback: function() {\r\n\r\n            if (this.get('_attemptsLeft') === 0 || this.get('_feedback') && !this.get('_feedback')._incorrect.notFinal) {\r\n                this.set({\r\n                    feedbackTitle: this.get('title'),\r\n                    feedbackMessage: this.get(\"_feedback\") ? this.get('_feedback')._incorrect.final : \"\"\r\n                });\r\n            } else {\r\n                this.set({\r\n                    feedbackTitle: this.get('title'),\r\n                    feedbackMessage: this.get(\"_feedback\") ? this.get('_feedback')._incorrect.notFinal : \"\"\r\n                });\r\n            }\r\n\r\n        },\r\n\r\n        // Reset the model to let the user have another go (not the same as attempts)\r\n        reset: function(type, force) {\r\n            if (!this.get(\"_canReset\") && !force) return;\r\n\r\n            type = type || true; //hard reset by default, can be \"soft\", \"hard\"/true\r\n\r\n            ComponentModel.prototype.reset.call(this, type, force);\r\n\r\n            var attempts = this.get('_attempts');\r\n            this.set({\r\n                _attemptsLeft: attempts,\r\n                _isCorrect: undefined,\r\n                _isSubmitted: false,\r\n                _buttonState: 'submit'\r\n            });\r\n        },\r\n\r\n        // Reset question for subsequent attempts\r\n        setQuestionAsReset: function() {\r\n            this.set({\r\n                _isEnabled: true,\r\n                _isSubmitted: false\r\n            });\r\n        },\r\n\r\n        // Used by the question view to reset the stored user answer\r\n        resetUserAnswer: function() {}\r\n\r\n\r\n    });\r\n\r\n    return QuestionModel;\r\n\r\n});\r\n\n","define('core/js/views/buttonsView',['coreJS/adapt'],function() {\r\n\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var ButtonsView = Backbone.View.extend({\r\n\r\n        initialize: function() {\r\n            this.listenTo(Adapt, 'remove', this.remove);\r\n            this.listenTo(this.model, 'change:_buttonState', this.onButtonStateChanged);\r\n            this.listenTo(this.model, 'change:feedbackMessage', this.onFeedbackMessageChanged);\r\n            this.listenTo(this.model, 'change:_attemptsLeft', this.onAttemptsChanged);\r\n            this.render();\r\n        },\r\n\r\n        events: {\r\n            'click .buttons-action': 'onActionClicked',\r\n            'click .buttons-feedback': 'onFeedbackClicked'\r\n        },\r\n\r\n        render: function() {\r\n            var data = this.model.toJSON();\r\n            var template = Handlebars.templates['buttons'];\r\n            _.defer(_.bind(function() {\r\n                this.postRender();\r\n                Adapt.trigger('buttonsView:postRender', this);\r\n            }, this));\r\n            this.$el.html(template(data));\r\n        },\r\n\r\n        postRender: function() {\r\n            this.updateAttemptsCount();\r\n            this.checkResetSubmittedState();\r\n            this.checkFeedbackState();\r\n            this.onButtonStateChanged(null, this.model.get('_buttonState'));\r\n            this.onFeedbackMessageChanged(null, this.model.get('feedbackMessage'));\r\n        },\r\n\r\n        checkResetSubmittedState: function() {\r\n            var isSubmitted = this.model.get('_isSubmitted');\r\n\r\n            if (!isSubmitted) {\r\n\r\n                var $icon = this.$('.buttons-marking-icon');\r\n                $icon.removeClass('icon-cross');\r\n                $icon.removeClass('icon-tick');\r\n                $icon.addClass('display-none');\r\n                this.$el.removeClass(\"submitted\");\r\n                this.model.set('feedbackMessage', undefined);\r\n                this.$('.buttons-feedback').a11y_cntrl_enabled(false);\r\n\r\n            } else {\r\n\r\n                this.$el.addClass(\"submitted\");\r\n\r\n            }\r\n        },\r\n\r\n        onActionClicked: function() {\r\n            var buttonState = this.model.get('_buttonState');\r\n            this.trigger('buttons:' + buttonState);\r\n            this.checkResetSubmittedState();\r\n        },\r\n\r\n        onFeedbackClicked: function() {\r\n            this.trigger('buttons:showFeedback');\r\n        },\r\n\r\n        onFeedbackMessageChanged: function(model, changedAttribute) {\r\n            if (changedAttribute && this.model.get('_canShowFeedback')) {\r\n\t\t\t\t//enable feedback button\r\n                this.$('.buttons-feedback').a11y_cntrl_enabled(true);\r\n            } else {\r\n\t\t\t\t//disable feedback button\r\n                this.$('.buttons-feedback').a11y_cntrl_enabled(false)\r\n            }\r\n        },\r\n\r\n        onButtonStateChanged: function(model, changedAttribute) {\r\n\t\t\t//use correct instead of complete to signify button state\r\n            if (changedAttribute === 'correct') {\r\n\t\t\t\t//disable submit button on correct (i.e. no model answer)\r\n                this.$('.buttons-action').a11y_cntrl_enabled(false);\r\n\r\n                if (!this.model.get(\"_canShowFeedback\")) {\r\n                    if (!this.$el.is(\".no-state\")) {\r\n                        //if no feedback, complete correct and has state, force focus to component state\r\n                        _.defer(_.bind(function() {\r\n                            $(\".\" + this.model.get(\"_id\") + \" .accessibility-state [tabindex]\").focusNoScroll();\r\n                        }, this));\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // Backwords compatibility with v1.x\r\n                var ariaLabel = this.model.get('_buttons')[\"_\" + changedAttribute].ariaLabel;\r\n                var buttonText = this.model.get('_buttons')[\"_\" + changedAttribute].buttonText;\r\n\r\n                switch (changedAttribute) {\r\n                    case \"showCorrectAnswer\": case \"hideCorrectAnswer\":\r\n    \t\t\t\t    //make model answer button inaccessible but enabled for visual users\r\n    \t\t\t\t    //\tdue to inability to represent selected incorrect/correct answers to a screen reader, may need revisiting\r\n                        this.$('.buttons-action').a11y_cntrl(false).html(buttonText).attr('aria-label', ariaLabel);\r\n                        break;\r\n                    default:\r\n    \t\t\t\t    //enabled button, make accessible and update aria labels and text.\r\n                        this.$('.buttons-action').a11y_cntrl_enabled(true).html(buttonText).attr('aria-label', ariaLabel);\r\n                }\r\n            }\r\n\r\n            this.updateAttemptsCount();\r\n        },\r\n\r\n        checkFeedbackState: function(){\r\n            if (!this.model.get('_canShowFeedback')) {\r\n                // If feedback should be hidden, the 'Submit' button should stretch\r\n                // to fill the space and the 'Feedback' button should be hidden.\r\n                // (These classes must be implemented in the theme.)\r\n                this.$('.buttons-action').addClass('buttons-action-fullwidth');\r\n                this.$('.buttons-feedback').addClass('no-feedback');\r\n            }\r\n        },\r\n\r\n        updateAttemptsCount: function(model, changedAttribute) {\r\n            var isInteractionComplete = this.model.get('_isInteractionComplete');\r\n            var attemptsLeft = (this.model.get('_attemptsLeft')) ? this.model.get('_attemptsLeft') : this.model.get('_attempts')\r\n            var isCorrect = this.model.get('_isCorrect');\r\n            var shouldDisplayAttempts = this.model.get('_shouldDisplayAttempts');\r\n            var attemptsString;\r\n\r\n            this.checkResetSubmittedState();\r\n\r\n            if (!isInteractionComplete && attemptsLeft != 0) {\r\n                attemptsString = attemptsLeft + \" \";\r\n                if (attemptsLeft > 1) {\r\n                    attemptsString += this.model.get('_buttons').remainingAttemptsText;\r\n                } else if (attemptsLeft === 1){\r\n                    attemptsString += this.model.get('_buttons').remainingAttemptText;\r\n                }\r\n\r\n            } else {\r\n                this.$('.buttons-display-inner').addClass('visibility-hidden');\r\n                this.showMarking();\r\n            }\r\n\r\n            if (shouldDisplayAttempts) {\r\n                this.$('.buttons-display-inner').html(attemptsString);\r\n            }\r\n\r\n        },\r\n\r\n        showMarking: function() {\r\n            if (!this.model.get('_canShowMarking')) return;\r\n\r\n            this.$('.buttons-marking-icon')\r\n                .removeClass('display-none')\r\n                .addClass(this.model.get('_isCorrect') ? 'icon-tick' : 'icon-cross');\r\n        }\r\n\r\n    });\r\n\r\n    return ButtonsView;\r\n\r\n});\r\n\n","define('core/js/views/componentView',['require','coreJS/adapt','coreViews/adaptView'],function(require) {\r\n\r\n    var Adapt = require(\"coreJS/adapt\");\r\n    var AdaptView = require('coreViews/adaptView');\r\n\r\n    var ComponentView = AdaptView.extend({\r\n\r\n        className: function() {\r\n            return \"component \"\r\n            + this.model.get('_component')\r\n            + \"-component \" + this.model.get('_id')\r\n            + \" \" + this.model.get('_classes')\r\n            + \" \" + this.setVisibility()\r\n            + \" component-\" + this.model.get('_layout')\r\n            + \" nth-child-\" + this.model.get(\"_nthChild\");\r\n        },\r\n\r\n        initialize: function(){\r\n\t\t\t//standard initialization + renderState function\r\n            AdaptView.prototype.initialize.apply(this, arguments);\r\n            this.renderState();\r\n        },\r\n\r\n        renderState: function() {\r\n            if (!Handlebars.partials['state']) return;\r\n\r\n\t\t\t// do not perform if component has .not-accessible class\r\n            if (this.$el.is(\".not-accessible\")) return;\r\n\t\t\t// do not perform if component has .no-state class\r\n            if (this.$el.is(\".no-state\")) return;\r\n\r\n\t\t\t//remove pre-exisiting states\r\n            var $previousState = this.$(\".accessibility-state\").remove();\r\n\r\n            //render and append state partial\r\n            var $rendered = $(Handlebars.partials['state']( this.model.toJSON() ));\r\n\r\n            //restore previous tab index if not on\r\n            var previousTabIndex = $previousState.find(\".aria-label\").attr(\"tabindex\");\r\n            if (previousTabIndex == \"-1\") {\r\n                $rendered.find(\".aria-label\").attr(\"tabindex\", previousTabIndex);\r\n            }\r\n\r\n            this.$el.append( $rendered );\r\n\r\n            this.listenToOnce(this.model, 'change:_isComplete', this.renderState);\r\n        },\r\n\r\n        postRender: function() {}\r\n\r\n    }, {\r\n        type:'component'\r\n    });\r\n\r\n    return ComponentView;\r\n\r\n});\r\n\n","define('core/js/views/menuView',['require','coreViews/adaptView','coreJS/adapt'],function(require) {\r\n\r\n    var AdaptView = require('coreViews/adaptView');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var MenuView = AdaptView.extend({\r\n\r\n    \tclassName: function() {\r\n            var visible = \"visibility-hidden\";\r\n            if (this.model.get('_isVisible')) {\r\n                visible = \"\";\r\n            }\r\n    \t\treturn 'menu '\r\n            + 'menu-'\r\n            + this.model.get('_id')\r\n            + \" \" + this.model.get('_classes')\r\n            + \" \" + this.setVisibility();\r\n    \t},\r\n\r\n        preRender: function() {\r\n            this.disableAnimation = Adapt.config.has('_disableAnimation') ? Adapt.config.get('_disableAnimation') : false;\r\n            this.$el.css('opacity', 0);\r\n            this.listenTo(this.model, 'change:_isReady', this.isReady);\r\n        },\r\n\r\n        postRender: function() {\r\n        },\r\n\r\n        isReady: function() {\r\n            if (this.model.get('_isReady')) {\r\n                _.defer(_.bind(function() {\r\n                    $('.loading').hide();\r\n                    $(window).scrollTop(0);\r\n                    Adapt.trigger('menuView:ready', this);\r\n                    var styleOptions = { opacity: 1 };\r\n                    if (this.disableAnimation) {\r\n                        this.$el.css(styleOptions);\r\n                    } else {\r\n                        this.$el.velocity(styleOptions, 'fast');\r\n                    }\r\n                    $(window).scroll();\r\n                }, this));\r\n            }\r\n        }\r\n\r\n    }, {\r\n        type:'menu'\r\n    });\r\n\r\n    return MenuView;\r\n\r\n});\r\n\n","define('core/js/views/navigationView',['require','backbone','handlebars','coreJS/adapt'],function(require) {\r\n\r\n    var Backbone = require('backbone');\r\n    var Handlebars = require('handlebars');\r\n    var Adapt = require('coreJS/adapt');\r\n\r\n    var NavigationView = Backbone.View.extend({\r\n\r\n        className: \"navigation\",\r\n\r\n        initialize: function() {\r\n            this.listenToOnce(Adapt, 'courseModel:dataLoading', this.remove);\r\n            this.listenTo(Adapt, 'router:menu router:page', this.hideNavigationButton);\r\n            this.template = \"navigation\";\r\n            this.preRender();\r\n        },\r\n\r\n        events: {\r\n            'click [data-event]':'triggerEvent'\r\n        },\r\n\r\n        preRender: function() {\r\n            Adapt.trigger('navigationView:preRender', this);\r\n            this.render();\r\n        },\r\n\r\n        render: function() {\r\n            var template = Handlebars.templates[this.template]\r\n            this.$el.html(template({_globals: Adapt.course.get(\"_globals\")})).appendTo('#wrapper');\r\n            _.defer(_.bind(function() {\r\n                Adapt.trigger('navigationView:postRender', this);\r\n            }, this));\r\n            return this;\r\n        },\r\n\r\n        triggerEvent: function(event) {\r\n            event.preventDefault();\r\n            var currentEvent = $(event.currentTarget).attr('data-event');\r\n            Adapt.trigger('navigation:' + currentEvent);\r\n        },\r\n\r\n        hideNavigationButton: function(model) {\r\n            if (model.get('_type') === \"course\") {\r\n                $('.navigation-back-button').addClass('display-none');\r\n            } else {\r\n                this.showNavigationButton();\r\n            }\r\n        },\r\n\r\n        showNavigationButton: function() {\r\n            $('.navigation-back-button').removeClass('display-none');\r\n        }\r\n\r\n    });\r\n\r\n    return NavigationView;\r\n\r\n});\r\n\n","define('core/js/views/questionView',[\r\n    'coreJS/adapt',\r\n    'coreViews/componentView',\r\n    'coreViews/buttonsView',\r\n    'coreModels/questionModel'\r\n], function(Adapt, ComponentView, ButtonsView, QuestionModel) {\r\n\r\n    var useQuestionModelOnly = false;\r\n\r\n    var QuestionView = ComponentView.extend({\r\n\r\n        className: function() {\r\n            return \"component \"\r\n            + \"question-component \"\r\n            + this.model.get('_component')\r\n            + \"-component \" + this.model.get('_id')\r\n            + \" \" + this.model.get('_classes')\r\n            + \" \" + this.setVisibility()\r\n            + \" component-\" + this.model.get('_layout')\r\n            + \" nth-child-\" + this.model.get(\"_nthChild\");\r\n        },\r\n\r\n        //////\r\n        // Setup question types\r\n        ////\r\n\r\n        preRender: function() {\r\n            // Setup listener for _isEnabled\r\n            this.listenTo(this.model, 'change:_isEnabled', this.onEnabledChanged);\r\n            // Checks to see if the question should be reset on revisit\r\n            this.checkIfResetOnRevisit();\r\n            // This method helps setup default settings on the model\r\n            this._runModelCompatibleFunction(\"setupDefaultSettings\");\r\n            // Blank method for setting up questions before rendering\r\n            this.setupQuestion();\r\n\r\n        },\r\n\r\n        // Used in the question view to disabled the question when _isEnabled has been set to false\r\n        onEnabledChanged: function(model, changedAttribute) {\r\n\r\n            // If isEnabled == false add disabled class\r\n            // else remove disabled class\r\n            if (!changedAttribute) {\r\n                this.$('.component-widget').addClass('disabled');\r\n                this.disableQuestion();\r\n            } else {\r\n                this.$('.component-widget').removeClass('disabled');\r\n                this.enableQuestion();\r\n            }\r\n\r\n        },\r\n\r\n        // Used by the question to disable the question during submit and complete stages\r\n        disableQuestion: function() {},\r\n\r\n        // Used by the question to enable the question during interactions\r\n        enableQuestion: function() {},\r\n\r\n        // Used to check if the question should reset on revisit\r\n        checkIfResetOnRevisit: function() {\r\n\r\n            var isResetOnRevisit = this.model.get('_isResetOnRevisit');\r\n\r\n            // If reset is enabled set defaults\r\n            // Call blank method for question to handle\r\n            if (isResetOnRevisit) {\r\n\r\n                this.model.reset(isResetOnRevisit, true);\r\n\r\n                 // Defer is added to allow the component to render\r\n                _.defer(_.bind(function() {\r\n                   this.resetQuestionOnRevisit(isResetOnRevisit);\r\n                }, this));\r\n\r\n            } else {\r\n\r\n                // If complete - display users answer\r\n                // or reset the question if not complete\r\n                var isInteractionComplete = this.model.get('_isInteractionComplete');\r\n\r\n                if (isInteractionComplete) {\r\n                    this.model.set('_buttonState', 'hideCorrectAnswer');\r\n                    // Defer is added to allow the component to render\r\n                    _.defer(_.bind(function() {\r\n                        this.onHideCorrectAnswerClicked();\r\n                    }, this));\r\n\r\n                } else {\r\n                    this.model.set('_buttonState', 'submit');\r\n                    // Defer is added to allow the component to render\r\n                    _.defer(_.bind(function() {\r\n                        this.onResetClicked();\r\n                    }, this));\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        // Used by the question to reset the question when revisiting the component\r\n        resetQuestionOnRevisit: function(type) {},\r\n\r\n        // Left blank for question setup - should be used instead of preRender\r\n        setupQuestion: function() {},\r\n\r\n        // Calls default methods to setup after the question is rendered\r\n        postRender: function() {\r\n            this.addButtonsView();\r\n            this.onQuestionRendered();\r\n        },\r\n\r\n        // Used to setup buttonsView and sets up the internal events for the question\r\n        addButtonsView: function() {\r\n            this.buttonsView = new ButtonsView({model: this.model, el: this.$('.buttons')});\r\n            this.listenTo(this.buttonsView, 'buttons:submit', this.onSubmitClicked);\r\n            this.listenTo(this.buttonsView, 'buttons:reset', this.onResetClicked);\r\n            this.listenTo(this.buttonsView, 'buttons:showCorrectAnswer', this.onShowCorrectAnswerClicked);\r\n            this.listenTo(this.buttonsView, 'buttons:hideCorrectAnswer', this.onHideCorrectAnswerClicked);\r\n            this.listenTo(this.buttonsView, 'buttons:showFeedback', this.showFeedback);\r\n        },\r\n\r\n        // Blank method used just like postRender is for presentational components\r\n        onQuestionRendered: function() {},\r\n\r\n        //////\r\n        // Submit process\r\n        ////\r\n\r\n        // Triggered when the submit button is clicked\r\n        onSubmitClicked: function() {\r\n            // canSubmit is setup in questions and should return a boolean\r\n            // If the question stops the user form submitting - show instruction error\r\n            // and give a blank method, onCannotSubmit to the question\r\n            var canSubmit = this._runModelCompatibleFunction(\"canSubmit\");\r\n\r\n            if(!canSubmit) {\r\n                this.showInstructionError();\r\n                this.onCannotSubmit();\r\n                return;\r\n            }\r\n\r\n            // Used to update the amount of attempts the question has\r\n            this._runModelCompatibleFunction(\"updateAttempts\");\r\n\r\n            // Used to set attributes on the model after being submitted\r\n            // Also adds a class of submitted\r\n            this._runModelCompatibleFunction(\"setQuestionAsSubmitted\");\r\n\r\n            // Used to remove instruction error that is set when\r\n            // the user has interacted in the wrong way\r\n            this.removeInstructionError();\r\n\r\n            // Used to store the users answer for later\r\n            // This is a blank method given to the question\r\n            this._runModelCompatibleFunction(\"storeUserAnswer\");\r\n\r\n            // Used to set question as correct:true/false\r\n            // Calls isCorrect which is blank for the question\r\n            // to fill out and return a boolean\r\n            this._runModelCompatibleFunction(\"markQuestion\", \"isCorrect\");\r\n\r\n            // Used by the question to set the score on the model\r\n            this._runModelCompatibleFunction(\"setScore\");\r\n\r\n            // Used by the question to display markings on the component\r\n            this.showMarking();\r\n\r\n            // Used to check if the question is complete\r\n            // Triggers setCompletionStatus and adds class to widget\r\n            this._runModelCompatibleFunction(\"checkQuestionCompletion\");\r\n\r\n            this.recordInteraction();\r\n\r\n            // Used to setup the feedback by checking against\r\n            // question isCorrect or isPartlyCorrect\r\n            this._runModelCompatibleFunction(\"setupFeedback\");\r\n\r\n            // Used to update buttonsView based upon question state\r\n            // Update buttons happens before showFeedback to preserve tabindexes and after setupFeedback to allow buttons to use feedback attribute\r\n            this._runModelCompatibleFunction(\"updateButtons\");\r\n\r\n            // Used to trigger an event so plugins can display feedback\r\n            this.showFeedback();\r\n            \r\n            this.onSubmitted();\r\n        },\r\n\r\n        // Adds a validation error class when the canSubmit returns false\r\n        showInstructionError: function() {\r\n            this.$(\".component-instruction-inner\").addClass(\"validation-error\");\r\n            this.$el.a11y_focus();\r\n        },\r\n\r\n        // Blank method for question to fill out when the question cannot be submitted\r\n        onCannotSubmit: function() {},\r\n\r\n        // Blank method for question to fill out when the question was successfully submitted\r\n        onSubmitted: function() {},\r\n\r\n        // Used to set _isEnabled and _isSubmitted on the model\r\n        // Also adds a 'submitted' class to the widget\r\n        setQuestionAsSubmitted: function() {\r\n            this.model.setQuestionAsSubmitted();\r\n            this.$(\".component-widget\").addClass(\"submitted\");\r\n        },\r\n\r\n        // Removes validation error class when the user canSubmit\r\n        removeInstructionError: function() {\r\n            this.$(\".component-instruction-inner\").removeClass(\"validation-error\");\r\n        },\r\n\r\n        // This is important and should give the user feedback on how they answered the question\r\n        // Normally done through ticks and crosses by adding classes\r\n        showMarking: function() {},\r\n\r\n        // Checks if the question should be set to complete\r\n        // Calls setCompletionStatus and adds complete classes\r\n        checkQuestionCompletion: function() {\r\n\r\n            var isComplete = this.model.checkQuestionCompletion();\r\n\r\n            if (isComplete) {\r\n                this.$('.component-widget').addClass('complete show-user-answer');\r\n            }\r\n\r\n        },\r\n\r\n        recordInteraction:function() {\r\n            if (this.model.get('_recordInteraction') === true || !this.model.has('_recordInteraction')) {\r\n                Adapt.trigger('questionView:recordInteraction', this);\r\n            }\r\n        },\r\n\r\n        // Used to show feedback based upon whether _canShowFeedback is true\r\n        showFeedback: function() {\r\n\r\n            if (this.model.get('_canShowFeedback')) {\r\n                Adapt.trigger('questionView:showFeedback', this);\r\n            } else {\r\n                Adapt.trigger('questionView:disabledFeedback', this);\r\n            }\r\n\r\n        },\r\n\r\n        onResetClicked: function() {\r\n            this.setQuestionAsReset();\r\n            \r\n            this._runModelCompatibleFunction(\"updateButtons\");\r\n\r\n            this._runModelCompatibleFunction(\"resetUserAnswer\");\r\n\r\n            this.resetQuestion();\r\n            if (this.model.get(\"_isReady\")) {\r\n                //if the model is already rendered, focus on the first tabbable element\r\n                //onResetClicked is called as part of the checkIfResetOnRevisit function and as a button click\r\n                _.defer(_.bind(function(){\r\n                    this.$el.a11y_focus();\r\n                }, this));\r\n            }\r\n        },\r\n\r\n        setQuestionAsReset: function() {\r\n            this.model.setQuestionAsReset();\r\n            this.$(\".component-widget\").removeClass(\"submitted\");\r\n            \r\n            // Attempt to get the current page location\r\n            var currentModel = Adapt.findById(Adapt.location._currentId);\r\n            if (currentModel && currentModel.get(\"_isReady\")) {\r\n                //if the page is ready, focus on the first tabbable item\r\n                //otherwise will try to set focus as page loads and components are rendered\r\n                this.$el.a11y_focus();\r\n            }\r\n        },\r\n\r\n        // Used by the question view to reset the look and feel of the component.\r\n        // This could also include resetting item data\r\n        // This is triggered when the reset button is clicked so it shouldn't\r\n        // be a full reset\r\n        resetQuestion: function() {},\r\n\r\n        onShowCorrectAnswerClicked: function() {\r\n            this.setQuestionAsShowCorrect();\r\n\r\n            this._runModelCompatibleFunction(\"updateButtons\");\r\n\r\n            this.showCorrectAnswer();\r\n        },\r\n\r\n        setQuestionAsShowCorrect: function() {\r\n            this.$(\".component-widget\")\r\n                .addClass(\"submitted show-correct-answer\")\r\n                .removeClass(\"show-user-answer\");\r\n        },\r\n\r\n        // Used by the question to display the correct answer to the user\r\n        showCorrectAnswer: function() {},\r\n\r\n        onHideCorrectAnswerClicked: function() {\r\n            this.setQuestionAsHideCorrect();\r\n\r\n            this._runModelCompatibleFunction(\"updateButtons\");\r\n\r\n            this.hideCorrectAnswer();\r\n        },\r\n\r\n\r\n        setQuestionAsHideCorrect: function() {\r\n            this.$(\".component-widget\")\r\n                .addClass(\"submitted show-user-answer\")\r\n                .removeClass(\"show-correct-answer\");\r\n        },\r\n\r\n        // Used by the question to display the users answer and\r\n        // hide the correct answer\r\n        // Should use the values stored in storeUserAnswer\r\n        hideCorrectAnswer: function() {},\r\n\r\n        // Time elapsed between the time the interaction was made available to the learner for response and the time of the first response\r\n        getLatency:function() {\r\n            return null;\r\n        },\r\n\r\n        // a string detailing how the user answered the question\r\n        getResponse:function() {},\r\n\r\n        // a string describing the type of interaction: \"choice\" and \"matching\" supported (see scorm wrapper)\r\n        getResponseType:function() {},\r\n\r\n        // This function is overridden if useQuestionModeOnly: false. see below.\r\n        _runModelCompatibleFunction: function(name, lookForViewOnlyFunction) {\r\n            return this.model[name](); //questionModel Only\r\n        }\r\n\r\n    }, {\r\n        _isQuestionType: true\r\n    });\r\n\r\n\r\n    //allows us to turn on and off the questionView style and use the separated questionModel+questionView style only\r\n    if (useQuestionModelOnly) return QuestionView;\r\n\r\n    /*BACKWARDS COMPATIBILITY SECTION\r\n    * This section below is only for compatibility between the separated questionView+questionModel and the old questionView\r\n    * Remove this section in when all components use questionModel and there is no need to have model behaviour in the questionView\r\n    */\r\n\r\n    var viewOnlyCompatibleQuestionView = {\r\n\r\n        /* All of these functions have been moved to the questionModel.js file. \r\n         * On the rare occasion that they have not been overridden by the component and \r\n                that they call the view only questionView version, \r\n                these functions are included as redirects to the new Question Model.\r\n                It is very unlikely that these are needed but they are included to ensure compatibility.\r\n         * If you need to override these in your component you should now make and register a component model.\r\n         * Please remove them from your question component's view.\r\n        */\r\n\r\n            // Calls default methods to setup on questions\r\n            setupDefaultSettings: function() {\r\n                return this.model.setupDefaultSettings();\r\n            },\r\n\r\n            // Used to setup either global or local button text\r\n            setupButtonSettings: function() {\r\n                return this.model.setupButtonSettings();\r\n            },\r\n\r\n            // Used to setup either global or local question weight/score\r\n            setupWeightSettings: function() {\r\n                return this.model.setupWeightSettings();\r\n            },\r\n\r\n            // Use to check if the user is allowed to submit the question\r\n            // Maybe the user has to select an item?\r\n            canSubmit: function() {\r\n                return this.model.canSubmit();\r\n            },\r\n\r\n            // Used to update the amount of attempts the user has left\r\n            updateAttempts: function() {\r\n                return this.model.updateAttempts();\r\n            },\r\n\r\n            // This is important for returning or showing the users answer\r\n            // This should preserve the state of the users answers\r\n            storeUserAnswer: function() {\r\n                return this.model.storeUserAnswer();\r\n            },\r\n\r\n            // Used by the question view to reset the stored user answer\r\n            resetUserAnswer: function() {\r\n                return this.model.resetUserAnswer();\r\n            },\r\n\r\n            // Sets _isCorrect:true/false based upon isCorrect method below\r\n            markQuestion: function() {\r\n\r\n                if (this._isInViewOnlyCompatibleMode(\"isCorrect\")) {\r\n\r\n                    if (this.isCorrect()) {\r\n                        this.model.set('_isCorrect', true);\r\n                    } else {\r\n                        this.model.set('_isCorrect', false);\r\n                    }\r\n\r\n                } else {\r\n                    return this.model.markQuestion();\r\n                }\r\n            },\r\n\r\n            // Should return a boolean based upon whether to question is correct or not\r\n            isCorrect: function() {\r\n                return this.model.isCorrect();\r\n            },\r\n\r\n            // Used to set the score based upon the _questionWeight\r\n            setScore: function() {\r\n                return this.model.setScore();\r\n            },\r\n\r\n            // Updates buttons based upon question state by setting\r\n            // _buttonState on the model which buttonsView listens to\r\n            updateButtons: function() {\r\n                return this.model.updateButtons();\r\n            },\r\n\r\n            // Used to setup the correct, incorrect and partly correct feedback\r\n            setupFeedback: function() {\r\n\r\n                if (this._isInViewOnlyCompatibleMode(\"isPartlyCorrect\")) {\r\n\r\n                    // Use view based feedback where necessary\r\n                    if (this.model.get('_isCorrect')) {\r\n                        this._runModelCompatibleFunction(\"setupCorrectFeedback\");\r\n                    } else if (this.isPartlyCorrect()) {\r\n                        this._runModelCompatibleFunction(\"setupPartlyCorrectFeedback\");\r\n                    } else {\r\n                        this._runModelCompatibleFunction(\"setupIncorrectFeedback\");\r\n                    }\r\n\r\n                } else {\r\n                    // Use model based feedback\r\n                    this.model.setupFeedback();\r\n                }\r\n\r\n            },\r\n\r\n            // Used by the question to determine if the question is incorrect or partly correct\r\n            // Should return a boolean\r\n            isPartlyCorrect: function() {\r\n                return this.model.isPartlyCorrect();\r\n            },\r\n\r\n            setupCorrectFeedback: function() {\r\n                return this.model.setupCorrectFeedback();\r\n            },\r\n\r\n            setupPartlyCorrectFeedback: function() {\r\n                return this.model.setupPartlyCorrectFeedback();\r\n            },\r\n\r\n            setupIncorrectFeedback: function() {\r\n                return this.model.setupIncorrectFeedback();\r\n            },\r\n\r\n\r\n        //Helper functions for compatibility layer\r\n        _runModelCompatibleFunction: function(name, lookForViewOnlyFunction) {\r\n            if (this._isInViewOnlyCompatibleMode(name, lookForViewOnlyFunction)) {\r\n                return this[name](); //questionView\r\n            } else {\r\n                return this.model[name](); //questionModel\r\n            }\r\n        },\r\n\r\n        _isInViewOnlyCompatibleMode: function(name, lookForViewOnlyFunction) {\r\n            //return false uses the model function questionModel\r\n            //return true uses the view only function questionView\r\n\r\n            var checkForFunction = (lookForViewOnlyFunction || name);\r\n\r\n            //if the function does NOT exist on the view at all, use the model only\r\n            if (!this.constructor.prototype[checkForFunction]) return false; //questionModel\r\n\r\n            //if the function DOES exist on the view and MATCHES the compatibility function above, use the model only\r\n            if (this.constructor.prototype[checkForFunction] === viewOnlyCompatibleQuestionView[checkForFunction])  {\r\n                switch (checkForFunction) {\r\n                case \"setupFeedback\":\r\n                case \"markQuestion\": \r\n                    return true; //questionView   \r\n                }\r\n                return false; //questionModel\r\n            }\r\n\r\n            //if the function DOES exist on the view and does NOT match the compatibility function above, use the view function\r\n            return true; //questionView\r\n        }\r\n\r\n    };\r\n    \r\n    //return question view class extended with the compatibility layer\r\n    return QuestionView.extend(viewOnlyCompatibleQuestionView, {\r\n        _isQuestionType: true\r\n    });\r\n\r\n    /*END OF BACKWARDS COMPATIBILITY SECTION*/\r\n\r\n});\r\n\n","require([\r\n    'core/js/adapt',\r\n    'core/js/adaptCollection',\r\n    'core/js/startController',\r\n    'core/js/models/articleModel',\r\n    'core/js/models/blockModel',\r\n    'core/js/models/configModel',\r\n    'core/js/models/contentObjectModel',\r\n    'core/js/models/componentModel',\r\n    'core/js/models/courseModel',\r\n    'core/js/models/questionModel',\r\n    'core/js/views/navigationView',\r\n    'core/js/accessibility',\r\n    'core/js/offlineStorage',\r\n    'core/js/device',\r\n    'core/js/drawer',\r\n    'core/js/notify',\r\n    'core/js/popupManager',\r\n    'core/js/router',\r\n    'core/js/models/lockingModel',\r\n    'plugins'\r\n], function (Adapt, AdaptCollection, StartController, ArticleModel, BlockModel, ConfigModel, ContentObjectModel, ComponentModel, CourseModel, QuestionModel, NavigationView) {\r\n\r\n    // Append loading template and show\r\n    window.Handlebars = _.extend(require(\"handlebars\"), window.Handlebars);\r\n\r\n    var template = Handlebars.templates['loading'];\r\n    $('#wrapper').append(template());\r\n    \r\n    Adapt.config = new ConfigModel(null, {url: \"course/config.json\", reset:true});\r\n    Adapt.config.on({\r\n        'change:_activeLanguage': onLanguageChange,\r\n        'change:_defaultDirection': onDirectionChange\r\n    });\r\n\r\n    // This function is called anytime a course object is loaded\r\n    // Once all course files are loaded trigger events and call Adapt.initialize\r\n    Adapt.checkDataIsLoaded = function(isLanguageChange) {\r\n        var language = Adapt.config.get('_activeLanguage');\r\n\r\n        if (Adapt.contentObjects.models.length > 0\r\n            && Adapt.articles.models.length > 0\r\n            && Adapt.blocks.models.length > 0\r\n            && Adapt.components.models.length > 0\r\n            && Adapt.course.get('_id')) {\r\n\r\n            mapAdaptIdsToObjects();\r\n\r\n            if (isLanguageChange) {\r\n                Adapt.trigger('app:languageChanged', language);\r\n\r\n                _.defer(function() {\r\n                    var startController = new StartController();\r\n                    var hash = '#/';\r\n\r\n                    if (startController.isEnabled()) {\r\n                        hash = startController.getStartHash(true);\r\n                    }\r\n                    \r\n                    Backbone.history.navigate(hash, { trigger: true, replace: true });\r\n                });\r\n            }\r\n\r\n            if (typeof Adapt.course.get('_buttons').submit !== 'undefined') {\r\n                // Backwards compatibility with v1.x\r\n                var oldButtons = Adapt.course.get('_buttons');\r\n                var buttons = [];\r\n\r\n                for (var key in oldButtons) {\r\n                    buttons['_' + key] = {\r\n                        buttonText: oldButtons[key],\r\n                        ariaLabel: oldButtons[key]\r\n                    };\r\n                }\r\n\r\n                // HACK - Append other missing values\r\n                buttons['_showFeedback'] = {\r\n                    buttonText: 'Show feedback',\r\n                    ariaLabel: 'Show feedback'\r\n                };\r\n\r\n                // Replace the existing property\r\n                Adapt.course.set('_buttons', buttons);\r\n            }\r\n            \r\n            try {\r\n                Adapt.trigger('app:dataLoaded');// Triggered to setup model connections in AdaptModel.js\r\n            } catch(e) {\r\n                outputError(e);\r\n            }\r\n            \r\n            Adapt.setupMapping();\r\n            \r\n            try {\r\n                Adapt.trigger('app:dataReady');\r\n            } catch(e) {\r\n                outputError(e);\r\n            }\r\n\r\n            Adapt.navigation = new NavigationView();// This should be triggered after 'app:dataReady' as plugins might want to manipulate the navigation\r\n            \r\n            Adapt.initialize();\r\n            \r\n            Adapt.off('adaptCollection:dataLoaded courseModel:dataLoaded');\r\n        }\r\n    };\r\n    \r\n    function outputError(e) {\r\n        //Allow plugin loading errors to output without stopping Adapt from loading\r\n        console.error(e);\r\n    }\r\n\r\n    function mapAdaptIdsToObjects () {\r\n        Adapt.contentObjects._byAdaptID = Adapt.contentObjects.groupBy(\"_id\");\r\n        Adapt.articles._byAdaptID = Adapt.articles.groupBy(\"_id\");\r\n        Adapt.blocks._byAdaptID = Adapt.blocks.groupBy(\"_id\");\r\n        Adapt.components._byAdaptID = Adapt.components.groupBy(\"_id\");\r\n    }\r\n\r\n    // This function is called when the config model triggers 'configModel:loadCourseData'\r\n    // Once the config model is loaded get the course files\r\n    // This enables plugins to tap in before the course files are loaded & also to change the default language\r\n    Adapt.loadCourseData = function(isLanguageChange) {\r\n        Adapt.on('adaptCollection:dataLoaded courseModel:dataLoaded', function() {\r\n            Adapt.checkDataIsLoaded(isLanguageChange);\r\n        });\r\n\r\n        // All code that needs to run before adapt starts should go here\r\n        var language = Adapt.config.get('_activeLanguage');\r\n\r\n        var courseFolder = \"course/\" + language +\"/\";\r\n\r\n        $('html').attr(\"lang\", language);\r\n\r\n        Adapt.course = new CourseModel(null, {url:courseFolder + \"course.json\", reset:true});\r\n\r\n        Adapt.contentObjects = new AdaptCollection(null, {\r\n            model: ContentObjectModel,\r\n            url: courseFolder +\"contentObjects.json\"\r\n        });\r\n\r\n        Adapt.articles = new AdaptCollection(null, {\r\n            model: ArticleModel,\r\n            url: courseFolder + \"articles.json\"\r\n        });\r\n\r\n        Adapt.blocks = new AdaptCollection(null, {\r\n            model: BlockModel,\r\n            url: courseFolder + \"blocks.json\"\r\n        });\r\n\r\n        Adapt.components = new AdaptCollection(null, {\r\n            model: function(json) {\r\n\r\n                //use view+model object\r\n                var ViewModelObject = Adapt.componentStore[json._component];\r\n\r\n                if(!ViewModelObject) {\r\n                    throw new Error(json._component + ' component not found. Is it installed and included?');\r\n                }\r\n\r\n                //if model defined for component use component model\r\n                if (ViewModelObject.model) {\r\n                    return new ViewModelObject.model(json);\r\n                }\r\n\r\n                var View = ViewModelObject.view || ViewModelObject;\r\n                //if question type use question model\r\n                if (View._isQuestionType) {\r\n                    return new QuestionModel(json);\r\n                }\r\n\r\n                //otherwise use component model\r\n                return new ComponentModel(json);\r\n            },\r\n            url: courseFolder + \"components.json\"\r\n        });\r\n    };\r\n\r\n    function onLanguageChange(model, language) {\r\n        Adapt.offlineStorage.set('lang', language);\r\n        Adapt.loadCourseData(true);\r\n    }\r\n\r\n    function onDirectionChange(model, direction) {\r\n        if (direction === 'rtl') {\r\n            $('html').removeClass('dir-ltr').addClass('dir-rtl');\r\n        } else {\r\n            $('html').removeClass('dir-rtl').addClass('dir-ltr');\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Before we actually go to load the course data, we first need to check to see if a language has been set\r\n    * If it has we can go ahead and start loading; if it hasn't, apply the defaultLanguage from config.json\r\n    */\r\n    function onLoadCourseData() {\r\n        if (Adapt.config.get('_activeLanguage')) {\r\n            Adapt.loadCourseData();\r\n        } else {\r\n            Adapt.config.set('_activeLanguage', Adapt.config.get('_defaultLanguage'));\r\n        }\r\n    }\r\n\r\n    // Events that are triggered by the main Adapt content collections and models\r\n    Adapt.once('configModel:loadCourseData', onLoadCourseData);\r\n\r\n});\r\n\ndefine(\"core/js/app\", [\"core/js/accessibility\",\"core/js/adapt\",\"core/js/adaptCollection\",\"core/js/device\",\"core/js/drawer\",\"core/js/helpers\",\"core/js/notify\",\"core/js/offlineStorage\",\"core/js/popupManager\",\"core/js/router\",\"core/js/startController\",\"core/js/models/adaptModel\",\"core/js/models/articleModel\",\"core/js/models/blockModel\",\"core/js/models/componentModel\",\"core/js/models/configModel\",\"core/js/models/contentObjectModel\",\"core/js/models/courseModel\",\"core/js/models/lockingModel\",\"core/js/models/notifyModel\",\"core/js/models/questionModel\",\"core/js/models/routerModel\",\"core/js/views/accessibilityView\",\"core/js/views/adaptView\",\"core/js/views/articleView\",\"core/js/views/blockView\",\"core/js/views/buttonsView\",\"core/js/views/componentView\",\"core/js/views/drawerView\",\"core/js/views/menuView\",\"core/js/views/navigationView\",\"core/js/views/notifyPushView\",\"core/js/views/notifyView\",\"core/js/views/pageView\",\"core/js/views/questionView\"], function(){});\n\n"]}